/* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.qspace.PricingOutput', null, global);
goog.exportSymbol('proto.qspace.component_prices', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.component_prices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.component_prices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.component_prices.displayName = 'proto.qspace.component_prices';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.component_prices.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.component_prices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.component_prices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.component_prices.toObject = function(includeInstance, msg) {
  var f, obj = {
    pay: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    receive: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.component_prices}
 */
proto.qspace.component_prices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.component_prices;
  return proto.qspace.component_prices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.component_prices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.component_prices}
 */
proto.qspace.component_prices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReceive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.component_prices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.component_prices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.component_prices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.component_prices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPay();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getReceive();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double pay = 1;
 * @return {number}
 */
proto.qspace.component_prices.prototype.getPay = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.component_prices.prototype.setPay = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double receive = 2;
 * @return {number}
 */
proto.qspace.component_prices.prototype.getReceive = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.component_prices.prototype.setReceive = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.PricingOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.qspace.PricingOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.PricingOutput.displayName = 'proto.qspace.PricingOutput';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.PricingOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.PricingOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.PricingOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PricingOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    delta1pct: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    gamma1pct: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    vega1pt: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    rho10bps: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    theta1d: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    prices: (f = msg.getPrices()) && proto.qspace.component_prices.toObject(includeInstance, f),
    volatility: +jspb.Message.getFieldWithDefault(msg, 101, 0.0),
    error: jspb.Message.getFieldWithDefault(msg, 500, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.PricingOutput}
 */
proto.qspace.PricingOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.PricingOutput;
  return proto.qspace.PricingOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.PricingOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.PricingOutput}
 */
proto.qspace.PricingOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDelta1pct(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGamma1pct(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVega1pt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRho10bps(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTheta1d(value);
      break;
    case 100:
      var value = new proto.qspace.component_prices;
      reader.readMessage(value,proto.qspace.component_prices.deserializeBinaryFromReader);
      msg.setPrices(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolatility(value);
      break;
    case 500:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.PricingOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.PricingOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.PricingOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PricingOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getDelta1pct();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getGamma1pct();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getVega1pt();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getRho10bps();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTheta1d();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPrices();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.qspace.component_prices.serializeBinaryToWriter
    );
  }
  f = message.getVolatility();
  if (f !== 0.0) {
    writer.writeDouble(
      101,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      500,
      f
    );
  }
};


/**
 * optional double price = 1;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double delta_1pct = 2;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getDelta1pct = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setDelta1pct = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double gamma_1pct = 3;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getGamma1pct = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setGamma1pct = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double vega_1pt = 4;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getVega1pt = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setVega1pt = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double rho_10bps = 5;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getRho10bps = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setRho10bps = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double theta_1d = 6;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getTheta1d = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setTheta1d = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional component_prices prices = 100;
 * @return {?proto.qspace.component_prices}
 */
proto.qspace.PricingOutput.prototype.getPrices = function() {
  return /** @type{?proto.qspace.component_prices} */ (
    jspb.Message.getWrapperField(this, proto.qspace.component_prices, 100));
};


/** @param {?proto.qspace.component_prices|undefined} value */
proto.qspace.PricingOutput.prototype.setPrices = function(value) {
  jspb.Message.setWrapperField(this, 100, value);
};


proto.qspace.PricingOutput.prototype.clearPrices = function() {
  this.setPrices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.PricingOutput.prototype.hasPrices = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional double volatility = 101;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getVolatility = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 101, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setVolatility = function(value) {
  jspb.Message.setField(this, 101, value);
};


/**
 * optional string error = 500;
 * @return {string}
 */
proto.qspace.PricingOutput.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 500, ""));
};


/** @param {string} value */
proto.qspace.PricingOutput.prototype.setError = function(value) {
  jspb.Message.setField(this, 500, value);
};


goog.object.extend(exports, proto.qspace);
