/* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.exportSymbol('proto.qspace.ScenarioBatchData', null, global);
goog.exportSymbol('proto.qspace.ScenarioData', null, global);
goog.exportSymbol('proto.qspace.ScenarioReportMsg', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.ScenarioData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioData.displayName = 'proto.qspace.ScenarioData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioData.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioData.toObject = function(includeInstance, msg) {
  var f, obj = {
    predicate: (f = msg.getPredicate()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    shift: (f = msg.getShift()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioData}
 */
proto.qspace.ScenarioData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioData;
  return proto.qspace.ScenarioData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioData}
 */
proto.qspace.ScenarioData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setPredicate(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setShift(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPredicate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getShift();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any predicate = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.qspace.ScenarioData.prototype.getPredicate = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.qspace.ScenarioData.prototype.setPredicate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.ScenarioData.prototype.clearPredicate = function() {
  this.setPredicate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ScenarioData.prototype.hasPredicate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Any shift = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.qspace.ScenarioData.prototype.getShift = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.qspace.ScenarioData.prototype.setShift = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.ScenarioData.prototype.clearShift = function() {
  this.setShift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ScenarioData.prototype.hasShift = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioBatchData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.ScenarioBatchData.repeatedFields_, null);
};
goog.inherits(proto.qspace.ScenarioBatchData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioBatchData.displayName = 'proto.qspace.ScenarioBatchData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.ScenarioBatchData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioBatchData.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioBatchData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioBatchData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioBatchData.toObject = function(includeInstance, msg) {
  var f, obj = {
    scenariosList: jspb.Message.toObjectList(msg.getScenariosList(),
    proto.qspace.ScenarioData.toObject, includeInstance),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioBatchData}
 */
proto.qspace.ScenarioBatchData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioBatchData;
  return proto.qspace.ScenarioBatchData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioBatchData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioBatchData}
 */
proto.qspace.ScenarioBatchData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.ScenarioData;
      reader.readMessage(value,proto.qspace.ScenarioData.deserializeBinaryFromReader);
      msg.addScenarios(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioBatchData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioBatchData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioBatchData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioBatchData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScenariosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.ScenarioData.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated ScenarioData scenarios = 1;
 * @return {!Array.<!proto.qspace.ScenarioData>}
 */
proto.qspace.ScenarioBatchData.prototype.getScenariosList = function() {
  return /** @type{!Array.<!proto.qspace.ScenarioData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.ScenarioData, 1));
};


/** @param {!Array.<!proto.qspace.ScenarioData>} value */
proto.qspace.ScenarioBatchData.prototype.setScenariosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.ScenarioData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.ScenarioData}
 */
proto.qspace.ScenarioBatchData.prototype.addScenarios = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.ScenarioData, opt_index);
};


proto.qspace.ScenarioBatchData.prototype.clearScenariosList = function() {
  this.setScenariosList([]);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.qspace.ScenarioBatchData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ScenarioBatchData.prototype.setId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.qspace.ScenarioBatchData.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.ScenarioBatchData.prototype.setLabel = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioReportMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.ScenarioReportMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.ScenarioReportMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioReportMsg.displayName = 'proto.qspace.ScenarioReportMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.ScenarioReportMsg.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioReportMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioReportMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioReportMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioReportMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scenarioBatchesList: jspb.Message.toObjectList(msg.getScenarioBatchesList(),
    proto.qspace.ScenarioBatchData.toObject, includeInstance),
    processor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    baseTargetsList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioReportMsg}
 */
proto.qspace.ScenarioReportMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioReportMsg;
  return proto.qspace.ScenarioReportMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioReportMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioReportMsg}
 */
proto.qspace.ScenarioReportMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.qspace.ScenarioBatchData;
      reader.readMessage(value,proto.qspace.ScenarioBatchData.deserializeBinaryFromReader);
      msg.addScenarioBatches(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addBaseTargets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioReportMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioReportMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioReportMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioReportMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScenarioBatchesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.qspace.ScenarioBatchData.serializeBinaryToWriter
    );
  }
  f = message.getProcessor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBaseTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.ScenarioReportMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.ScenarioReportMsg.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated ScenarioBatchData scenario_batches = 2;
 * @return {!Array.<!proto.qspace.ScenarioBatchData>}
 */
proto.qspace.ScenarioReportMsg.prototype.getScenarioBatchesList = function() {
  return /** @type{!Array.<!proto.qspace.ScenarioBatchData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.ScenarioBatchData, 2));
};


/** @param {!Array.<!proto.qspace.ScenarioBatchData>} value */
proto.qspace.ScenarioReportMsg.prototype.setScenarioBatchesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.qspace.ScenarioBatchData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.ScenarioBatchData}
 */
proto.qspace.ScenarioReportMsg.prototype.addScenarioBatches = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.qspace.ScenarioBatchData, opt_index);
};


proto.qspace.ScenarioReportMsg.prototype.clearScenarioBatchesList = function() {
  this.setScenarioBatchesList([]);
};


/**
 * optional string processor = 3;
 * @return {string}
 */
proto.qspace.ScenarioReportMsg.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.ScenarioReportMsg.prototype.setProcessor = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated string base_targets = 4;
 * @return {!Array.<string>}
 */
proto.qspace.ScenarioReportMsg.prototype.getBaseTargetsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.qspace.ScenarioReportMsg.prototype.setBaseTargetsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.qspace.ScenarioReportMsg.prototype.addBaseTargets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.qspace.ScenarioReportMsg.prototype.clearBaseTargetsList = function() {
  this.setBaseTargetsList([]);
};


goog.object.extend(exports, proto.qspace);
