/* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var FloatRate_pb = require('./FloatRate_pb.js');
var DateTimeMsg_pb = require('./DateTimeMsg_pb.js');
goog.exportSymbol('proto.qspace.SwapMsg', null, global);
goog.exportSymbol('proto.qspace.SwapMsg.Leg', null, global);
goog.exportSymbol('proto.qspace.SwapMsg.Leg.Period', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.SwapMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapMsg.displayName = 'proto.qspace.SwapMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    pay: (f = msg.getPay()) && proto.qspace.SwapMsg.Leg.toObject(includeInstance, f),
    receive: (f = msg.getReceive()) && proto.qspace.SwapMsg.Leg.toObject(includeInstance, f),
    counterparty: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapMsg}
 */
proto.qspace.SwapMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapMsg;
  return proto.qspace.SwapMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapMsg}
 */
proto.qspace.SwapMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.SwapMsg.Leg;
      reader.readMessage(value,proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader);
      msg.setPay(value);
      break;
    case 2:
      var value = new proto.qspace.SwapMsg.Leg;
      reader.readMessage(value,proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader);
      msg.setReceive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterparty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPay();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.SwapMsg.Leg.serializeBinaryToWriter
    );
  }
  f = message.getReceive();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.SwapMsg.Leg.serializeBinaryToWriter
    );
  }
  f = message.getCounterparty();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapMsg.Leg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.SwapMsg.Leg.repeatedFields_, proto.qspace.SwapMsg.Leg.oneofGroups_);
};
goog.inherits(proto.qspace.SwapMsg.Leg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapMsg.Leg.displayName = 'proto.qspace.SwapMsg.Leg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.SwapMsg.Leg.repeatedFields_ = [5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qspace.SwapMsg.Leg.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.qspace.SwapMsg.Leg.RateCase = {
  RATE_NOT_SET: 0,
  FLOAT_RATE: 1,
  FIXED_RATE: 2
};

/**
 * @return {proto.qspace.SwapMsg.Leg.RateCase}
 */
proto.qspace.SwapMsg.Leg.prototype.getRateCase = function() {
  return /** @type {proto.qspace.SwapMsg.Leg.RateCase} */(jspb.Message.computeOneofCase(this, proto.qspace.SwapMsg.Leg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapMsg.Leg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapMsg.Leg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapMsg.Leg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.toObject = function(includeInstance, msg) {
  var f, obj = {
    floatRate: (f = msg.getFloatRate()) && FloatRate_pb.FloatRate.toObject(includeInstance, f),
    fixedRate: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    discountCurve: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scheduleList: jspb.Message.toObjectList(msg.getScheduleList(),
    proto.qspace.SwapMsg.Leg.Period.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.Leg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapMsg.Leg;
  return proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapMsg.Leg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new FloatRate_pb.FloatRate;
      reader.readMessage(value,FloatRate_pb.FloatRate.deserializeBinaryFromReader);
      msg.setFloatRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFixedRate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscountCurve(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 5:
      var value = new proto.qspace.SwapMsg.Leg.Period;
      reader.readMessage(value,proto.qspace.SwapMsg.Leg.Period.deserializeBinaryFromReader);
      msg.addSchedule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapMsg.Leg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapMsg.Leg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapMsg.Leg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFloatRate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      FloatRate_pb.FloatRate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDiscountCurve();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScheduleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.qspace.SwapMsg.Leg.Period.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapMsg.Leg.Period = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.SwapMsg.Leg.Period, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapMsg.Leg.Period.displayName = 'proto.qspace.SwapMsg.Leg.Period';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapMsg.Leg.Period.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapMsg.Leg.Period} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.Period.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && DateTimeMsg_pb.DateTimeMsg.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && DateTimeMsg_pb.DateTimeMsg.toObject(includeInstance, f),
    fixingStart: (f = msg.getFixingStart()) && DateTimeMsg_pb.DateTimeMsg.toObject(includeInstance, f),
    fixingEnd: (f = msg.getFixingEnd()) && DateTimeMsg_pb.DateTimeMsg.toObject(includeInstance, f),
    yearFraction: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    notional: +jspb.Message.getFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapMsg.Leg.Period}
 */
proto.qspace.SwapMsg.Leg.Period.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapMsg.Leg.Period;
  return proto.qspace.SwapMsg.Leg.Period.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapMsg.Leg.Period} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapMsg.Leg.Period}
 */
proto.qspace.SwapMsg.Leg.Period.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new DateTimeMsg_pb.DateTimeMsg;
      reader.readMessage(value,DateTimeMsg_pb.DateTimeMsg.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new DateTimeMsg_pb.DateTimeMsg;
      reader.readMessage(value,DateTimeMsg_pb.DateTimeMsg.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 3:
      var value = new DateTimeMsg_pb.DateTimeMsg;
      reader.readMessage(value,DateTimeMsg_pb.DateTimeMsg.deserializeBinaryFromReader);
      msg.setFixingStart(value);
      break;
    case 4:
      var value = new DateTimeMsg_pb.DateTimeMsg;
      reader.readMessage(value,DateTimeMsg_pb.DateTimeMsg.deserializeBinaryFromReader);
      msg.setFixingEnd(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYearFraction(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNotional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapMsg.Leg.Period.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapMsg.Leg.Period} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.Period.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      DateTimeMsg_pb.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      DateTimeMsg_pb.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getFixingStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      DateTimeMsg_pb.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getFixingEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      DateTimeMsg_pb.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getYearFraction();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getNotional();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional DateTimeMsg start = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getStart = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, DateTimeMsg_pb.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setStart = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearStart = function() {
  this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DateTimeMsg end = 2;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getEnd = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, DateTimeMsg_pb.DateTimeMsg, 2));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DateTimeMsg fixing_start = 3;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getFixingStart = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, DateTimeMsg_pb.DateTimeMsg, 3));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setFixingStart = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearFixingStart = function() {
  this.setFixingStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasFixingStart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DateTimeMsg fixing_end = 4;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getFixingEnd = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, DateTimeMsg_pb.DateTimeMsg, 4));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setFixingEnd = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearFixingEnd = function() {
  this.setFixingEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasFixingEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double year_fraction = 5;
 * @return {number}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getYearFraction = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setYearFraction = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double notional = 6;
 * @return {number}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getNotional = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setNotional = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional FloatRate float_rate = 1;
 * @return {?proto.qspace.FloatRate}
 */
proto.qspace.SwapMsg.Leg.prototype.getFloatRate = function() {
  return /** @type{?proto.qspace.FloatRate} */ (
    jspb.Message.getWrapperField(this, FloatRate_pb.FloatRate, 1));
};


/** @param {?proto.qspace.FloatRate|undefined} value */
proto.qspace.SwapMsg.Leg.prototype.setFloatRate = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.qspace.SwapMsg.Leg.oneofGroups_[0], value);
};


proto.qspace.SwapMsg.Leg.prototype.clearFloatRate = function() {
  this.setFloatRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.prototype.hasFloatRate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double fixed_rate = 2;
 * @return {number}
 */
proto.qspace.SwapMsg.Leg.prototype.getFixedRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.SwapMsg.Leg.prototype.setFixedRate = function(value) {
  jspb.Message.setOneofField(this, 2, proto.qspace.SwapMsg.Leg.oneofGroups_[0], value);
};


proto.qspace.SwapMsg.Leg.prototype.clearFixedRate = function() {
  jspb.Message.setOneofField(this, 2, proto.qspace.SwapMsg.Leg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.prototype.hasFixedRate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string discount_curve = 3;
 * @return {string}
 */
proto.qspace.SwapMsg.Leg.prototype.getDiscountCurve = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.SwapMsg.Leg.prototype.setDiscountCurve = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string currency = 4;
 * @return {string}
 */
proto.qspace.SwapMsg.Leg.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.qspace.SwapMsg.Leg.prototype.setCurrency = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated Period schedule = 5;
 * @return {!Array.<!proto.qspace.SwapMsg.Leg.Period>}
 */
proto.qspace.SwapMsg.Leg.prototype.getScheduleList = function() {
  return /** @type{!Array.<!proto.qspace.SwapMsg.Leg.Period>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.SwapMsg.Leg.Period, 5));
};


/** @param {!Array.<!proto.qspace.SwapMsg.Leg.Period>} value */
proto.qspace.SwapMsg.Leg.prototype.setScheduleList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.qspace.SwapMsg.Leg.Period=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.SwapMsg.Leg.Period}
 */
proto.qspace.SwapMsg.Leg.prototype.addSchedule = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.qspace.SwapMsg.Leg.Period, opt_index);
};


proto.qspace.SwapMsg.Leg.prototype.clearScheduleList = function() {
  this.setScheduleList([]);
};


/**
 * optional Leg pay = 1;
 * @return {?proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.prototype.getPay = function() {
  return /** @type{?proto.qspace.SwapMsg.Leg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapMsg.Leg, 1));
};


/** @param {?proto.qspace.SwapMsg.Leg|undefined} value */
proto.qspace.SwapMsg.prototype.setPay = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.SwapMsg.prototype.clearPay = function() {
  this.setPay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.prototype.hasPay = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Leg receive = 2;
 * @return {?proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.prototype.getReceive = function() {
  return /** @type{?proto.qspace.SwapMsg.Leg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapMsg.Leg, 2));
};


/** @param {?proto.qspace.SwapMsg.Leg|undefined} value */
proto.qspace.SwapMsg.prototype.setReceive = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.SwapMsg.prototype.clearReceive = function() {
  this.setReceive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.prototype.hasReceive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string counterparty = 3;
 * @return {string}
 */
proto.qspace.SwapMsg.prototype.getCounterparty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.SwapMsg.prototype.setCounterparty = function(value) {
  jspb.Message.setField(this, 3, value);
};


goog.object.extend(exports, proto.qspace);
