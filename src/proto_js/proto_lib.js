/* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.qspace.BusinessDayConvention');
goog.provide('proto.qspace.ContextMsg');
goog.provide('proto.qspace.DataKey');
goog.provide('proto.qspace.DataVertexMsg');
goog.provide('proto.qspace.DateTimeMsg');
goog.provide('proto.qspace.DayCount');
goog.provide('proto.qspace.DividendStreamEntry');
goog.provide('proto.qspace.DividendStreamMsg');
goog.provide('proto.qspace.DoubleMsg');
goog.provide('proto.qspace.ErrorMsg');
goog.provide('proto.qspace.ExponentMsg');
goog.provide('proto.qspace.FloatRate');
goog.provide('proto.qspace.Frequency');
goog.provide('proto.qspace.FuncVertexMsg');
goog.provide('proto.qspace.GraphMsg');
goog.provide('proto.qspace.HolidayCalendarMsg');
goog.provide('proto.qspace.IdentityPredicateMsg');
goog.provide('proto.qspace.IntMsg');
goog.provide('proto.qspace.LinkMsg');
goog.provide('proto.qspace.LinksMsg');
goog.provide('proto.qspace.OptionMsg');
goog.provide('proto.qspace.Period');
goog.provide('proto.qspace.PositionMsg');
goog.provide('proto.qspace.PriceMsg');
goog.provide('proto.qspace.PriceShiftMsg');
goog.provide('proto.qspace.PricingOutput');
goog.provide('proto.qspace.PricingResultsMsg');
goog.provide('proto.qspace.ProductData');
goog.provide('proto.qspace.ProductDetailsMsg');
goog.provide('proto.qspace.RateCurveMsg');
goog.provide('proto.qspace.RateCurvePoint');
goog.provide('proto.qspace.RateCurveShiftMsg');
goog.provide('proto.qspace.RateInterpolation');
goog.provide('proto.qspace.RateMsg');
goog.provide('proto.qspace.ResultMsg');
goog.provide('proto.qspace.RollConvention');
goog.provide('proto.qspace.ScenarioBatchData');
goog.provide('proto.qspace.ScenarioData');
goog.provide('proto.qspace.ScenarioReportMsg');
goog.provide('proto.qspace.ScenarioRequest');
goog.provide('proto.qspace.ScenarioResultsMsg');
goog.provide('proto.qspace.SourceData');
goog.provide('proto.qspace.SourcesMsg');
goog.provide('proto.qspace.StatusMsg');
goog.provide('proto.qspace.StatusMsg.StatusType');
goog.provide('proto.qspace.StubConvention');
goog.provide('proto.qspace.SwapDefinitionMsg');
goog.provide('proto.qspace.SwapDefinitionMsg.Leg');
goog.provide('proto.qspace.SwapLegData');
goog.provide('proto.qspace.SwapMsg');
goog.provide('proto.qspace.SwapMsg.Leg');
goog.provide('proto.qspace.SwapMsg.Leg.Period');
goog.provide('proto.qspace.TimeSeriesMsg');
goog.provide('proto.qspace.TimeSeriesMsg.Entry');
goog.provide('proto.qspace.TimeShiftMsg');
goog.provide('proto.qspace.UnderlierAttributesMsg');
goog.provide('proto.qspace.VersionMsg');
goog.provide('proto.qspace.VertexMsg');
goog.provide('proto.qspace.VolCurveEntry');
goog.provide('proto.qspace.VolSurfaceMsg');
goog.provide('proto.qspace.VolatilityShiftMsg');
goog.provide('proto.qspace.Wrapper');
goog.provide('proto.qspace.component_prices');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.google.protobuf.Any');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.DateTimeMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.DateTimeMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.DateTimeMsg.displayName = 'proto.qspace.DateTimeMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.DateTimeMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.DateTimeMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.DateTimeMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DateTimeMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0),
    str: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.DateTimeMsg}
 */
proto.qspace.DateTimeMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.DateTimeMsg;
  return proto.qspace.DateTimeMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.DateTimeMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.DateTimeMsg}
 */
proto.qspace.DateTimeMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.DateTimeMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.DateTimeMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.DateTimeMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DateTimeMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.qspace.DateTimeMsg.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qspace.DateTimeMsg.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string str = 2;
 * @return {string}
 */
proto.qspace.DateTimeMsg.prototype.getStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.DateTimeMsg.prototype.setStr = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.RateCurveShiftMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.RateCurveShiftMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.RateCurveShiftMsg.displayName = 'proto.qspace.RateCurveShiftMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.RateCurveShiftMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.RateCurveShiftMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.RateCurveShiftMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateCurveShiftMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    isParallel: jspb.Message.getFieldWithDefault(msg, 1, false),
    amount: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    start: (f = msg.getStart()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.RateCurveShiftMsg}
 */
proto.qspace.RateCurveShiftMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.RateCurveShiftMsg;
  return proto.qspace.RateCurveShiftMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.RateCurveShiftMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.RateCurveShiftMsg}
 */
proto.qspace.RateCurveShiftMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsParallel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 3:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 4:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.RateCurveShiftMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.RateCurveShiftMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.RateCurveShiftMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateCurveShiftMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsParallel();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool is_parallel = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.RateCurveShiftMsg.prototype.getIsParallel = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.qspace.RateCurveShiftMsg.prototype.setIsParallel = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.qspace.RateCurveShiftMsg.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.RateCurveShiftMsg.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional DateTimeMsg start = 3;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.RateCurveShiftMsg.prototype.getStart = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 3));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.RateCurveShiftMsg.prototype.setStart = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.qspace.RateCurveShiftMsg.prototype.clearStart = function() {
  this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.RateCurveShiftMsg.prototype.hasStart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DateTimeMsg end = 4;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.RateCurveShiftMsg.prototype.getEnd = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 4));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.RateCurveShiftMsg.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.qspace.RateCurveShiftMsg.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.RateCurveShiftMsg.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.VolCurveEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.VolCurveEntry.repeatedFields_, null);
};
goog.inherits(proto.qspace.VolCurveEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.VolCurveEntry.displayName = 'proto.qspace.VolCurveEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.VolCurveEntry.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.VolCurveEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.VolCurveEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.VolCurveEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VolCurveEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    maturity: (f = msg.getMaturity()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    strikesList: jspb.Message.getRepeatedFloatingPointField(msg, 2),
    volsList: jspb.Message.getRepeatedFloatingPointField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.VolCurveEntry}
 */
proto.qspace.VolCurveEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.VolCurveEntry;
  return proto.qspace.VolCurveEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.VolCurveEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.VolCurveEntry}
 */
proto.qspace.VolCurveEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setMaturity(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setStrikesList(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setVolsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.VolCurveEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.VolCurveEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.VolCurveEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VolCurveEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaturity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getStrikesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getVolsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      3,
      f
    );
  }
};


/**
 * optional DateTimeMsg maturity = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.VolCurveEntry.prototype.getMaturity = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.VolCurveEntry.prototype.setMaturity = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.VolCurveEntry.prototype.clearMaturity = function() {
  this.setMaturity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.VolCurveEntry.prototype.hasMaturity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated double strikes = 2;
 * @return {!Array.<number>}
 */
proto.qspace.VolCurveEntry.prototype.getStrikesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {!Array.<number>} value */
proto.qspace.VolCurveEntry.prototype.setStrikesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.qspace.VolCurveEntry.prototype.addStrikes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.qspace.VolCurveEntry.prototype.clearStrikesList = function() {
  this.setStrikesList([]);
};


/**
 * repeated double vols = 3;
 * @return {!Array.<number>}
 */
proto.qspace.VolCurveEntry.prototype.getVolsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/** @param {!Array.<number>} value */
proto.qspace.VolCurveEntry.prototype.setVolsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.qspace.VolCurveEntry.prototype.addVols = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.qspace.VolCurveEntry.prototype.clearVolsList = function() {
  this.setVolsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.VolSurfaceMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.VolSurfaceMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.VolSurfaceMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.VolSurfaceMsg.displayName = 'proto.qspace.VolSurfaceMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.VolSurfaceMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.VolSurfaceMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.VolSurfaceMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.VolSurfaceMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VolSurfaceMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    curvesList: jspb.Message.toObjectList(msg.getCurvesList(),
    proto.qspace.VolCurveEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.VolSurfaceMsg}
 */
proto.qspace.VolSurfaceMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.VolSurfaceMsg;
  return proto.qspace.VolSurfaceMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.VolSurfaceMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.VolSurfaceMsg}
 */
proto.qspace.VolSurfaceMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.VolCurveEntry;
      reader.readMessage(value,proto.qspace.VolCurveEntry.deserializeBinaryFromReader);
      msg.addCurves(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.VolSurfaceMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.VolSurfaceMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.VolSurfaceMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VolSurfaceMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurvesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.VolCurveEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VolCurveEntry curves = 1;
 * @return {!Array.<!proto.qspace.VolCurveEntry>}
 */
proto.qspace.VolSurfaceMsg.prototype.getCurvesList = function() {
  return /** @type{!Array.<!proto.qspace.VolCurveEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.VolCurveEntry, 1));
};


/** @param {!Array.<!proto.qspace.VolCurveEntry>} value */
proto.qspace.VolSurfaceMsg.prototype.setCurvesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.VolCurveEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.VolCurveEntry}
 */
proto.qspace.VolSurfaceMsg.prototype.addCurves = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.VolCurveEntry, opt_index);
};


proto.qspace.VolSurfaceMsg.prototype.clearCurvesList = function() {
  this.setCurvesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.StatusMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.StatusMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.StatusMsg.displayName = 'proto.qspace.StatusMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.StatusMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.StatusMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.StatusMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.StatusMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, ""),
    message: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.StatusMsg}
 */
proto.qspace.StatusMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.StatusMsg;
  return proto.qspace.StatusMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.StatusMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.StatusMsg}
 */
proto.qspace.StatusMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperation(value);
      break;
    case 3:
      var value = /** @type {!proto.qspace.StatusMsg.StatusType} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.StatusMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.StatusMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.StatusMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.StatusMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.qspace.StatusMsg.StatusType = {
  IN_PROGRESS: 0,
  COMPLETE: 1,
  FAIL: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.StatusMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.StatusMsg.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string operation = 2;
 * @return {string}
 */
proto.qspace.StatusMsg.prototype.getOperation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.StatusMsg.prototype.setOperation = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional StatusType status = 3;
 * @return {!proto.qspace.StatusMsg.StatusType}
 */
proto.qspace.StatusMsg.prototype.getStatus = function() {
  return /** @type {!proto.qspace.StatusMsg.StatusType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.qspace.StatusMsg.StatusType} value */
proto.qspace.StatusMsg.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string timestamp = 4;
 * @return {string}
 */
proto.qspace.StatusMsg.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.qspace.StatusMsg.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string message = 5;
 * @return {string}
 */
proto.qspace.StatusMsg.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.qspace.StatusMsg.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapLegData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.SwapLegData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapLegData.displayName = 'proto.qspace.SwapLegData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapLegData.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapLegData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapLegData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapLegData.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, ""),
    discountCurve: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 3, ""),
    notional: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    fixedRate: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    spread: +jspb.Message.getFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapLegData}
 */
proto.qspace.SwapLegData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapLegData;
  return proto.qspace.SwapLegData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapLegData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapLegData}
 */
proto.qspace.SwapLegData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscountCurve(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNotional(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFixedRate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpread(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapLegData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapLegData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapLegData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapLegData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDiscountCurve();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNotional();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getFixedRate();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSpread();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional string index = 1;
 * @return {string}
 */
proto.qspace.SwapLegData.prototype.getIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.SwapLegData.prototype.setIndex = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string discount_curve = 2;
 * @return {string}
 */
proto.qspace.SwapLegData.prototype.getDiscountCurve = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.SwapLegData.prototype.setDiscountCurve = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string currency = 3;
 * @return {string}
 */
proto.qspace.SwapLegData.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.SwapLegData.prototype.setCurrency = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double notional = 4;
 * @return {number}
 */
proto.qspace.SwapLegData.prototype.getNotional = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.qspace.SwapLegData.prototype.setNotional = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double fixed_rate = 5;
 * @return {number}
 */
proto.qspace.SwapLegData.prototype.getFixedRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.qspace.SwapLegData.prototype.setFixedRate = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double spread = 6;
 * @return {number}
 */
proto.qspace.SwapLegData.prototype.getSpread = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.qspace.SwapLegData.prototype.setSpread = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ProductData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.qspace.ProductData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ProductData.displayName = 'proto.qspace.ProductData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ProductData.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ProductData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ProductData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ProductData.toObject = function(includeInstance, msg) {
  var f, obj = {
    maturityDate: (f = msg.getMaturityDate()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    underlier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    counterparty: jspb.Message.getFieldWithDefault(msg, 3, ""),
    putOrCall: jspb.Message.getFieldWithDefault(msg, 11, ""),
    amerOrEuro: jspb.Message.getFieldWithDefault(msg, 12, ""),
    strike: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    contractSize: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    pay: (f = msg.getPay()) && proto.qspace.SwapLegData.toObject(includeInstance, f),
    receive: (f = msg.getReceive()) && proto.qspace.SwapLegData.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 500, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ProductData}
 */
proto.qspace.ProductData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ProductData;
  return proto.qspace.ProductData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ProductData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ProductData}
 */
proto.qspace.ProductData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setMaturityDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnderlier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterparty(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPutOrCall(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmerOrEuro(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStrike(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContractSize(value);
      break;
    case 21:
      var value = new proto.qspace.SwapLegData;
      reader.readMessage(value,proto.qspace.SwapLegData.deserializeBinaryFromReader);
      msg.setPay(value);
      break;
    case 22:
      var value = new proto.qspace.SwapLegData;
      reader.readMessage(value,proto.qspace.SwapLegData.deserializeBinaryFromReader);
      msg.setReceive(value);
      break;
    case 500:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ProductData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ProductData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ProductData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ProductData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaturityDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getUnderlier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCounterparty();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPutOrCall();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAmerOrEuro();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getStrike();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getContractSize();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getPay();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.qspace.SwapLegData.serializeBinaryToWriter
    );
  }
  f = message.getReceive();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.qspace.SwapLegData.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      500,
      f
    );
  }
};


/**
 * optional DateTimeMsg maturity_date = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.ProductData.prototype.getMaturityDate = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.ProductData.prototype.setMaturityDate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.ProductData.prototype.clearMaturityDate = function() {
  this.setMaturityDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ProductData.prototype.hasMaturityDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string underlier = 2;
 * @return {string}
 */
proto.qspace.ProductData.prototype.getUnderlier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ProductData.prototype.setUnderlier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string counterparty = 3;
 * @return {string}
 */
proto.qspace.ProductData.prototype.getCounterparty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.ProductData.prototype.setCounterparty = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string put_or_call = 11;
 * @return {string}
 */
proto.qspace.ProductData.prototype.getPutOrCall = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.qspace.ProductData.prototype.setPutOrCall = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string amer_or_euro = 12;
 * @return {string}
 */
proto.qspace.ProductData.prototype.getAmerOrEuro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.qspace.ProductData.prototype.setAmerOrEuro = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional double strike = 13;
 * @return {number}
 */
proto.qspace.ProductData.prototype.getStrike = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.qspace.ProductData.prototype.setStrike = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional double contract_size = 14;
 * @return {number}
 */
proto.qspace.ProductData.prototype.getContractSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.qspace.ProductData.prototype.setContractSize = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional SwapLegData pay = 21;
 * @return {?proto.qspace.SwapLegData}
 */
proto.qspace.ProductData.prototype.getPay = function() {
  return /** @type{?proto.qspace.SwapLegData} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapLegData, 21));
};


/** @param {?proto.qspace.SwapLegData|undefined} value */
proto.qspace.ProductData.prototype.setPay = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.qspace.ProductData.prototype.clearPay = function() {
  this.setPay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ProductData.prototype.hasPay = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional SwapLegData receive = 22;
 * @return {?proto.qspace.SwapLegData}
 */
proto.qspace.ProductData.prototype.getReceive = function() {
  return /** @type{?proto.qspace.SwapLegData} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapLegData, 22));
};


/** @param {?proto.qspace.SwapLegData|undefined} value */
proto.qspace.ProductData.prototype.setReceive = function(value) {
  jspb.Message.setWrapperField(this, 22, value);
};


proto.qspace.ProductData.prototype.clearReceive = function() {
  this.setReceive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ProductData.prototype.hasReceive = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string error = 500;
 * @return {string}
 */
proto.qspace.ProductData.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 500, ""));
};


/** @param {string} value */
proto.qspace.ProductData.prototype.setError = function(value) {
  jspb.Message.setField(this, 500, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ProductDetailsMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.ProductDetailsMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ProductDetailsMsg.displayName = 'proto.qspace.ProductDetailsMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ProductDetailsMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ProductDetailsMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ProductDetailsMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ProductDetailsMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vertex: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastUpdated: (f = msg.getLastUpdated()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.qspace.ProductData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ProductDetailsMsg}
 */
proto.qspace.ProductDetailsMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ProductDetailsMsg;
  return proto.qspace.ProductDetailsMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ProductDetailsMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ProductDetailsMsg}
 */
proto.qspace.ProductDetailsMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVertex(value);
      break;
    case 3:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    case 5:
      var value = new proto.qspace.ProductData;
      reader.readMessage(value,proto.qspace.ProductData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ProductDetailsMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ProductDetailsMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ProductDetailsMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ProductDetailsMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVertex();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.qspace.ProductData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product = 1;
 * @return {string}
 */
proto.qspace.ProductDetailsMsg.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.ProductDetailsMsg.prototype.setProduct = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string vertex = 2;
 * @return {string}
 */
proto.qspace.ProductDetailsMsg.prototype.getVertex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ProductDetailsMsg.prototype.setVertex = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional DateTimeMsg last_updated = 3;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.ProductDetailsMsg.prototype.getLastUpdated = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 3));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.ProductDetailsMsg.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.qspace.ProductDetailsMsg.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ProductDetailsMsg.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ProductData data = 5;
 * @return {?proto.qspace.ProductData}
 */
proto.qspace.ProductDetailsMsg.prototype.getData = function() {
  return /** @type{?proto.qspace.ProductData} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ProductData, 5));
};


/** @param {?proto.qspace.ProductData|undefined} value */
proto.qspace.ProductDetailsMsg.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.qspace.ProductDetailsMsg.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ProductDetailsMsg.prototype.hasData = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.DataKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.DataKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.DataKey.displayName = 'proto.qspace.DataKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.DataKey.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.DataKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.DataKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DataKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.DataKey}
 */
proto.qspace.DataKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.DataKey;
  return proto.qspace.DataKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.DataKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.DataKey}
 */
proto.qspace.DataKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.DataKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.DataKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.DataKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DataKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.qspace.DataKey.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.DataKey.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.qspace.DataKey.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.DataKey.prototype.setSource = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.qspace.DataKey.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.DataKey.prototype.setLabel = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.qspace.RateInterpolation = {
  CONSTANT_FORWARD: 0,
  LINEAR_ZERO: 1,
  LINEAR_DISCOUNT: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.RateCurvePoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.RateCurvePoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.RateCurvePoint.displayName = 'proto.qspace.RateCurvePoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.RateCurvePoint.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.RateCurvePoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.RateCurvePoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateCurvePoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    value: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.RateCurvePoint}
 */
proto.qspace.RateCurvePoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.RateCurvePoint;
  return proto.qspace.RateCurvePoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.RateCurvePoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.RateCurvePoint}
 */
proto.qspace.RateCurvePoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.RateCurvePoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.RateCurvePoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.RateCurvePoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateCurvePoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional DateTimeMsg date = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.RateCurvePoint.prototype.getDate = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.RateCurvePoint.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.RateCurvePoint.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.RateCurvePoint.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.qspace.RateCurvePoint.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.RateCurvePoint.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.RateCurveMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.RateCurveMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.RateCurveMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.RateCurveMsg.displayName = 'proto.qspace.RateCurveMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.RateCurveMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.RateCurveMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.RateCurveMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.RateCurveMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateCurveMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.qspace.RateCurvePoint.toObject, includeInstance),
    base: (f = msg.getBase()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    interpolation: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.RateCurveMsg}
 */
proto.qspace.RateCurveMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.RateCurveMsg;
  return proto.qspace.RateCurveMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.RateCurveMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.RateCurveMsg}
 */
proto.qspace.RateCurveMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.RateCurvePoint;
      reader.readMessage(value,proto.qspace.RateCurvePoint.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    case 2:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    case 3:
      var value = /** @type {!proto.qspace.RateInterpolation} */ (reader.readEnum());
      msg.setInterpolation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.RateCurveMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.RateCurveMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.RateCurveMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateCurveMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.RateCurvePoint.serializeBinaryToWriter
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getInterpolation();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * repeated RateCurvePoint points = 1;
 * @return {!Array.<!proto.qspace.RateCurvePoint>}
 */
proto.qspace.RateCurveMsg.prototype.getPointsList = function() {
  return /** @type{!Array.<!proto.qspace.RateCurvePoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.RateCurvePoint, 1));
};


/** @param {!Array.<!proto.qspace.RateCurvePoint>} value */
proto.qspace.RateCurveMsg.prototype.setPointsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.RateCurvePoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.RateCurvePoint}
 */
proto.qspace.RateCurveMsg.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.RateCurvePoint, opt_index);
};


proto.qspace.RateCurveMsg.prototype.clearPointsList = function() {
  this.setPointsList([]);
};


/**
 * optional DateTimeMsg base = 2;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.RateCurveMsg.prototype.getBase = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 2));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.RateCurveMsg.prototype.setBase = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.RateCurveMsg.prototype.clearBase = function() {
  this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.RateCurveMsg.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RateInterpolation interpolation = 3;
 * @return {!proto.qspace.RateInterpolation}
 */
proto.qspace.RateCurveMsg.prototype.getInterpolation = function() {
  return /** @type {!proto.qspace.RateInterpolation} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.qspace.RateInterpolation} value */
proto.qspace.RateCurveMsg.prototype.setInterpolation = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.RateMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.RateMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.RateMsg.displayName = 'proto.qspace.RateMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.RateMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.RateMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.RateMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.RateMsg}
 */
proto.qspace.RateMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.RateMsg;
  return proto.qspace.RateMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.RateMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.RateMsg}
 */
proto.qspace.RateMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.RateMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.RateMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.RateMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.RateMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double value = 1;
 * @return {number}
 */
proto.qspace.RateMsg.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.RateMsg.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.TimeSeriesMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.TimeSeriesMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.TimeSeriesMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.TimeSeriesMsg.displayName = 'proto.qspace.TimeSeriesMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.TimeSeriesMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.TimeSeriesMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.TimeSeriesMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.TimeSeriesMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.TimeSeriesMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.qspace.TimeSeriesMsg.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.TimeSeriesMsg}
 */
proto.qspace.TimeSeriesMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.TimeSeriesMsg;
  return proto.qspace.TimeSeriesMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.TimeSeriesMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.TimeSeriesMsg}
 */
proto.qspace.TimeSeriesMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.TimeSeriesMsg.Entry;
      reader.readMessage(value,proto.qspace.TimeSeriesMsg.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.TimeSeriesMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.TimeSeriesMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.TimeSeriesMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.TimeSeriesMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.TimeSeriesMsg.Entry.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.TimeSeriesMsg.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.TimeSeriesMsg.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.TimeSeriesMsg.Entry.displayName = 'proto.qspace.TimeSeriesMsg.Entry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.TimeSeriesMsg.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.TimeSeriesMsg.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.TimeSeriesMsg.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.TimeSeriesMsg.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    dateTime: (f = msg.getDateTime()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    value: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.TimeSeriesMsg.Entry}
 */
proto.qspace.TimeSeriesMsg.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.TimeSeriesMsg.Entry;
  return proto.qspace.TimeSeriesMsg.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.TimeSeriesMsg.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.TimeSeriesMsg.Entry}
 */
proto.qspace.TimeSeriesMsg.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setDateTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.TimeSeriesMsg.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.TimeSeriesMsg.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.TimeSeriesMsg.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.TimeSeriesMsg.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDateTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional DateTimeMsg date_time = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.TimeSeriesMsg.Entry.prototype.getDateTime = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.TimeSeriesMsg.Entry.prototype.setDateTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.TimeSeriesMsg.Entry.prototype.clearDateTime = function() {
  this.setDateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.TimeSeriesMsg.Entry.prototype.hasDateTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.qspace.TimeSeriesMsg.Entry.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.TimeSeriesMsg.Entry.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated Entry entries = 1;
 * @return {!Array.<!proto.qspace.TimeSeriesMsg.Entry>}
 */
proto.qspace.TimeSeriesMsg.prototype.getEntriesList = function() {
  return /** @type{!Array.<!proto.qspace.TimeSeriesMsg.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.TimeSeriesMsg.Entry, 1));
};


/** @param {!Array.<!proto.qspace.TimeSeriesMsg.Entry>} value */
proto.qspace.TimeSeriesMsg.prototype.setEntriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.TimeSeriesMsg.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.TimeSeriesMsg.Entry}
 */
proto.qspace.TimeSeriesMsg.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.TimeSeriesMsg.Entry, opt_index);
};


proto.qspace.TimeSeriesMsg.prototype.clearEntriesList = function() {
  this.setEntriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.HolidayCalendarMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.HolidayCalendarMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.HolidayCalendarMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.HolidayCalendarMsg.displayName = 'proto.qspace.HolidayCalendarMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.HolidayCalendarMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.HolidayCalendarMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.HolidayCalendarMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.HolidayCalendarMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.HolidayCalendarMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    holidaysList: jspb.Message.toObjectList(msg.getHolidaysList(),
    proto.qspace.DateTimeMsg.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.HolidayCalendarMsg}
 */
proto.qspace.HolidayCalendarMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.HolidayCalendarMsg;
  return proto.qspace.HolidayCalendarMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.HolidayCalendarMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.HolidayCalendarMsg}
 */
proto.qspace.HolidayCalendarMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.addHolidays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.HolidayCalendarMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.HolidayCalendarMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.HolidayCalendarMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.HolidayCalendarMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolidaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DateTimeMsg holidays = 1;
 * @return {!Array.<!proto.qspace.DateTimeMsg>}
 */
proto.qspace.HolidayCalendarMsg.prototype.getHolidaysList = function() {
  return /** @type{!Array.<!proto.qspace.DateTimeMsg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {!Array.<!proto.qspace.DateTimeMsg>} value */
proto.qspace.HolidayCalendarMsg.prototype.setHolidaysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.DateTimeMsg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.DateTimeMsg}
 */
proto.qspace.HolidayCalendarMsg.prototype.addHolidays = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.DateTimeMsg, opt_index);
};


proto.qspace.HolidayCalendarMsg.prototype.clearHolidaysList = function() {
  this.setHolidaysList([]);
};


/**
 * @enum {number}
 */
proto.qspace.DayCount = {
  NO_DAYCOUNT: 0,
  ACT_ACT_ISDA: 1,
  ACT_ACT_ICMA: 2,
  ACT_ACT_AFB: 3,
  ACT_ACT_YEAR: 4,
  ACT_365_ACTUAL: 5,
  ACT_365L: 6,
  ACT_360: 7,
  ACT_364: 8,
  ACT_365F: 9,
  ACT_365_25: 10,
  NL_365: 11,
  THIRTY_360_ISDA: 12,
  THIRTY_U_360: 13,
  THIRTY_U_360_EOM: 14,
  THIRTY_360_PSA: 15,
  THIRTY_E_360_ISDA: 16,
  THIRTY_E_360: 17,
  THIRTY_EPLUS_360: 18
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.Frequency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.Frequency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.Frequency.displayName = 'proto.qspace.Frequency';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.Frequency.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.Frequency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.Frequency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.Frequency.toObject = function(includeInstance, msg) {
  var f, obj = {
    period: jspb.Message.getFieldWithDefault(msg, 1, 0),
    number: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.Frequency}
 */
proto.qspace.Frequency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.Frequency;
  return proto.qspace.Frequency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.Frequency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.Frequency}
 */
proto.qspace.Frequency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.qspace.Period} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.Frequency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.Frequency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.Frequency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.Frequency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional Period period = 1;
 * @return {!proto.qspace.Period}
 */
proto.qspace.Frequency.prototype.getPeriod = function() {
  return /** @type {!proto.qspace.Period} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.qspace.Period} value */
proto.qspace.Frequency.prototype.setPeriod = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 number = 2;
 * @return {number}
 */
proto.qspace.Frequency.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.qspace.Frequency.prototype.setNumber = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.qspace.Period = {
  DAY: 0,
  WEEK: 1,
  MONTH: 2,
  YEAR: 3
};

/**
 * @enum {number}
 */
proto.qspace.BusinessDayConvention = {
  NO_ADJUST: 0,
  FOLLOWING: 1,
  MODIFIED_FOLLOWING: 2,
  MODIFIED_FOLLOWING_BI_MONTHLY: 3,
  PRECEDING: 4,
  MODIFIED_PRECEDING: 5,
  NEAREST: 6
};

/**
 * @enum {number}
 */
proto.qspace.StubConvention = {
  NO_STUB: 0,
  LONG_INITIAL: 1,
  SHORT_INITIAL: 2,
  LONG_FINAL: 3,
  SHORT_FINAL: 4,
  BOTH: 5
};

/**
 * @enum {number}
 */
proto.qspace.RollConvention = {
  NO_ROLL: 0,
  EOM: 1,
  IMM: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.FloatRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.FloatRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.FloatRate.displayName = 'proto.qspace.FloatRate';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.FloatRate.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.FloatRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.FloatRate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.FloatRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spread: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.FloatRate}
 */
proto.qspace.FloatRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.FloatRate;
  return proto.qspace.FloatRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.FloatRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.FloatRate}
 */
proto.qspace.FloatRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSpread(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.FloatRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.FloatRate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.FloatRate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.FloatRate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpread();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string index = 1;
 * @return {string}
 */
proto.qspace.FloatRate.prototype.getIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.FloatRate.prototype.setIndex = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double spread = 2;
 * @return {number}
 */
proto.qspace.FloatRate.prototype.getSpread = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.FloatRate.prototype.setSpread = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapDefinitionMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.SwapDefinitionMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapDefinitionMsg.displayName = 'proto.qspace.SwapDefinitionMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapDefinitionMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapDefinitionMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapDefinitionMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapDefinitionMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    pay: (f = msg.getPay()) && proto.qspace.SwapDefinitionMsg.Leg.toObject(includeInstance, f),
    receive: (f = msg.getReceive()) && proto.qspace.SwapDefinitionMsg.Leg.toObject(includeInstance, f),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    counterparty: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapDefinitionMsg}
 */
proto.qspace.SwapDefinitionMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapDefinitionMsg;
  return proto.qspace.SwapDefinitionMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapDefinitionMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapDefinitionMsg}
 */
proto.qspace.SwapDefinitionMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 3:
      var value = new proto.qspace.SwapDefinitionMsg.Leg;
      reader.readMessage(value,proto.qspace.SwapDefinitionMsg.Leg.deserializeBinaryFromReader);
      msg.setPay(value);
      break;
    case 4:
      var value = new proto.qspace.SwapDefinitionMsg.Leg;
      reader.readMessage(value,proto.qspace.SwapDefinitionMsg.Leg.deserializeBinaryFromReader);
      msg.setReceive(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterparty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapDefinitionMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapDefinitionMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapDefinitionMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapDefinitionMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getPay();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.SwapDefinitionMsg.Leg.serializeBinaryToWriter
    );
  }
  f = message.getReceive();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qspace.SwapDefinitionMsg.Leg.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCounterparty();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapDefinitionMsg.Leg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qspace.SwapDefinitionMsg.Leg.oneofGroups_);
};
goog.inherits(proto.qspace.SwapDefinitionMsg.Leg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapDefinitionMsg.Leg.displayName = 'proto.qspace.SwapDefinitionMsg.Leg';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qspace.SwapDefinitionMsg.Leg.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.qspace.SwapDefinitionMsg.Leg.RateCase = {
  RATE_NOT_SET: 0,
  FLOAT_RATE: 2,
  FIXED_RATE: 3
};

/**
 * @return {proto.qspace.SwapDefinitionMsg.Leg.RateCase}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getRateCase = function() {
  return /** @type {proto.qspace.SwapDefinitionMsg.Leg.RateCase} */(jspb.Message.computeOneofCase(this, proto.qspace.SwapDefinitionMsg.Leg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapDefinitionMsg.Leg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapDefinitionMsg.Leg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapDefinitionMsg.Leg.toObject = function(includeInstance, msg) {
  var f, obj = {
    notional: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    floatRate: (f = msg.getFloatRate()) && proto.qspace.FloatRate.toObject(includeInstance, f),
    fixedRate: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    frequency: (f = msg.getFrequency()) && proto.qspace.Frequency.toObject(includeInstance, f),
    holidayCalendar: jspb.Message.getFieldWithDefault(msg, 5, ""),
    discountCurve: jspb.Message.getFieldWithDefault(msg, 6, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 7, ""),
    dayCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    stubConv: jspb.Message.getFieldWithDefault(msg, 9, 0),
    bdayConv: jspb.Message.getFieldWithDefault(msg, 10, 0),
    rollConv: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapDefinitionMsg.Leg}
 */
proto.qspace.SwapDefinitionMsg.Leg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapDefinitionMsg.Leg;
  return proto.qspace.SwapDefinitionMsg.Leg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapDefinitionMsg.Leg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapDefinitionMsg.Leg}
 */
proto.qspace.SwapDefinitionMsg.Leg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNotional(value);
      break;
    case 2:
      var value = new proto.qspace.FloatRate;
      reader.readMessage(value,proto.qspace.FloatRate.deserializeBinaryFromReader);
      msg.setFloatRate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFixedRate(value);
      break;
    case 4:
      var value = new proto.qspace.Frequency;
      reader.readMessage(value,proto.qspace.Frequency.deserializeBinaryFromReader);
      msg.setFrequency(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolidayCalendar(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscountCurve(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 8:
      var value = /** @type {!proto.qspace.DayCount} */ (reader.readEnum());
      msg.setDayCount(value);
      break;
    case 9:
      var value = /** @type {!proto.qspace.StubConvention} */ (reader.readEnum());
      msg.setStubConv(value);
      break;
    case 10:
      var value = /** @type {!proto.qspace.BusinessDayConvention} */ (reader.readEnum());
      msg.setBdayConv(value);
      break;
    case 11:
      var value = /** @type {!proto.qspace.RollConvention} */ (reader.readEnum());
      msg.setRollConv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapDefinitionMsg.Leg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapDefinitionMsg.Leg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapDefinitionMsg.Leg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotional();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getFloatRate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.FloatRate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getFrequency();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qspace.Frequency.serializeBinaryToWriter
    );
  }
  f = message.getHolidayCalendar();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDiscountCurve();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDayCount();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getStubConv();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getBdayConv();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getRollConv();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
};


/**
 * optional double notional = 1;
 * @return {number}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getNotional = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setNotional = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional FloatRate float_rate = 2;
 * @return {?proto.qspace.FloatRate}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getFloatRate = function() {
  return /** @type{?proto.qspace.FloatRate} */ (
    jspb.Message.getWrapperField(this, proto.qspace.FloatRate, 2));
};


/** @param {?proto.qspace.FloatRate|undefined} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setFloatRate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.qspace.SwapDefinitionMsg.Leg.oneofGroups_[0], value);
};


proto.qspace.SwapDefinitionMsg.Leg.prototype.clearFloatRate = function() {
  this.setFloatRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.hasFloatRate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double fixed_rate = 3;
 * @return {number}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getFixedRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setFixedRate = function(value) {
  jspb.Message.setOneofField(this, 3, proto.qspace.SwapDefinitionMsg.Leg.oneofGroups_[0], value);
};


proto.qspace.SwapDefinitionMsg.Leg.prototype.clearFixedRate = function() {
  jspb.Message.setOneofField(this, 3, proto.qspace.SwapDefinitionMsg.Leg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.hasFixedRate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Frequency frequency = 4;
 * @return {?proto.qspace.Frequency}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getFrequency = function() {
  return /** @type{?proto.qspace.Frequency} */ (
    jspb.Message.getWrapperField(this, proto.qspace.Frequency, 4));
};


/** @param {?proto.qspace.Frequency|undefined} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setFrequency = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.qspace.SwapDefinitionMsg.Leg.prototype.clearFrequency = function() {
  this.setFrequency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.hasFrequency = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string holiday_calendar = 5;
 * @return {string}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getHolidayCalendar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setHolidayCalendar = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string discount_curve = 6;
 * @return {string}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getDiscountCurve = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setDiscountCurve = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string currency = 7;
 * @return {string}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setCurrency = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional DayCount day_count = 8;
 * @return {!proto.qspace.DayCount}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getDayCount = function() {
  return /** @type {!proto.qspace.DayCount} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.qspace.DayCount} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setDayCount = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional StubConvention stub_conv = 9;
 * @return {!proto.qspace.StubConvention}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getStubConv = function() {
  return /** @type {!proto.qspace.StubConvention} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.qspace.StubConvention} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setStubConv = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional BusinessDayConvention bday_conv = 10;
 * @return {!proto.qspace.BusinessDayConvention}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getBdayConv = function() {
  return /** @type {!proto.qspace.BusinessDayConvention} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.qspace.BusinessDayConvention} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setBdayConv = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional RollConvention roll_conv = 11;
 * @return {!proto.qspace.RollConvention}
 */
proto.qspace.SwapDefinitionMsg.Leg.prototype.getRollConv = function() {
  return /** @type {!proto.qspace.RollConvention} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.qspace.RollConvention} value */
proto.qspace.SwapDefinitionMsg.Leg.prototype.setRollConv = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional DateTimeMsg start = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapDefinitionMsg.prototype.getStart = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapDefinitionMsg.prototype.setStart = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.SwapDefinitionMsg.prototype.clearStart = function() {
  this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapDefinitionMsg.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DateTimeMsg end = 2;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapDefinitionMsg.prototype.getEnd = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 2));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapDefinitionMsg.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.SwapDefinitionMsg.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapDefinitionMsg.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Leg pay = 3;
 * @return {?proto.qspace.SwapDefinitionMsg.Leg}
 */
proto.qspace.SwapDefinitionMsg.prototype.getPay = function() {
  return /** @type{?proto.qspace.SwapDefinitionMsg.Leg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapDefinitionMsg.Leg, 3));
};


/** @param {?proto.qspace.SwapDefinitionMsg.Leg|undefined} value */
proto.qspace.SwapDefinitionMsg.prototype.setPay = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.qspace.SwapDefinitionMsg.prototype.clearPay = function() {
  this.setPay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapDefinitionMsg.prototype.hasPay = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Leg receive = 4;
 * @return {?proto.qspace.SwapDefinitionMsg.Leg}
 */
proto.qspace.SwapDefinitionMsg.prototype.getReceive = function() {
  return /** @type{?proto.qspace.SwapDefinitionMsg.Leg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapDefinitionMsg.Leg, 4));
};


/** @param {?proto.qspace.SwapDefinitionMsg.Leg|undefined} value */
proto.qspace.SwapDefinitionMsg.prototype.setReceive = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.qspace.SwapDefinitionMsg.prototype.clearReceive = function() {
  this.setReceive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapDefinitionMsg.prototype.hasReceive = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.qspace.SwapDefinitionMsg.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.qspace.SwapDefinitionMsg.prototype.setCurrency = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string counterparty = 6;
 * @return {string}
 */
proto.qspace.SwapDefinitionMsg.prototype.getCounterparty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.qspace.SwapDefinitionMsg.prototype.setCounterparty = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.OptionMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.OptionMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.OptionMsg.displayName = 'proto.qspace.OptionMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.OptionMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.OptionMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.OptionMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.OptionMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    isPut: jspb.Message.getFieldWithDefault(msg, 1, false),
    earlyExercise: jspb.Message.getFieldWithDefault(msg, 2, false),
    expiry: (f = msg.getExpiry()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    strike: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    contractSize: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    underlier: jspb.Message.getFieldWithDefault(msg, 6, ""),
    counterparty: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.OptionMsg}
 */
proto.qspace.OptionMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.OptionMsg;
  return proto.qspace.OptionMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.OptionMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.OptionMsg}
 */
proto.qspace.OptionMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPut(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEarlyExercise(value);
      break;
    case 3:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setExpiry(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStrike(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContractSize(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnderlier(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterparty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.OptionMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.OptionMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.OptionMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.OptionMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsPut();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEarlyExercise();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getExpiry();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getStrike();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getContractSize();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getUnderlier();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCounterparty();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional bool is_put = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.OptionMsg.prototype.getIsPut = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.qspace.OptionMsg.prototype.setIsPut = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool early_exercise = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.OptionMsg.prototype.getEarlyExercise = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.qspace.OptionMsg.prototype.setEarlyExercise = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional DateTimeMsg expiry = 3;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.OptionMsg.prototype.getExpiry = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 3));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.OptionMsg.prototype.setExpiry = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.qspace.OptionMsg.prototype.clearExpiry = function() {
  this.setExpiry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.OptionMsg.prototype.hasExpiry = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double strike = 4;
 * @return {number}
 */
proto.qspace.OptionMsg.prototype.getStrike = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.qspace.OptionMsg.prototype.setStrike = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double contract_size = 5;
 * @return {number}
 */
proto.qspace.OptionMsg.prototype.getContractSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.qspace.OptionMsg.prototype.setContractSize = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string underlier = 6;
 * @return {string}
 */
proto.qspace.OptionMsg.prototype.getUnderlier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.qspace.OptionMsg.prototype.setUnderlier = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string counterparty = 7;
 * @return {string}
 */
proto.qspace.OptionMsg.prototype.getCounterparty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.qspace.OptionMsg.prototype.setCounterparty = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.PriceMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.PriceMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.PriceMsg.displayName = 'proto.qspace.PriceMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.PriceMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.PriceMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.PriceMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PriceMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.PriceMsg}
 */
proto.qspace.PriceMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.PriceMsg;
  return proto.qspace.PriceMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.PriceMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.PriceMsg}
 */
proto.qspace.PriceMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.PriceMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.PriceMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.PriceMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PriceMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double value = 1;
 * @return {number}
 */
proto.qspace.PriceMsg.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.PriceMsg.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.DoubleMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.DoubleMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.DoubleMsg.displayName = 'proto.qspace.DoubleMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.DoubleMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.DoubleMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.DoubleMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DoubleMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.DoubleMsg}
 */
proto.qspace.DoubleMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.DoubleMsg;
  return proto.qspace.DoubleMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.DoubleMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.DoubleMsg}
 */
proto.qspace.DoubleMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.DoubleMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.DoubleMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.DoubleMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DoubleMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double value = 1;
 * @return {number}
 */
proto.qspace.DoubleMsg.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.DoubleMsg.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.IntMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.IntMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.IntMsg.displayName = 'proto.qspace.IntMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.IntMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.IntMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.IntMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.IntMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.IntMsg}
 */
proto.qspace.IntMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.IntMsg;
  return proto.qspace.IntMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.IntMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.IntMsg}
 */
proto.qspace.IntMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.IntMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.IntMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.IntMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.IntMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.qspace.IntMsg.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qspace.IntMsg.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ExponentMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.ExponentMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ExponentMsg.displayName = 'proto.qspace.ExponentMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ExponentMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ExponentMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ExponentMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ExponentMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ExponentMsg}
 */
proto.qspace.ExponentMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ExponentMsg;
  return proto.qspace.ExponentMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ExponentMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ExponentMsg}
 */
proto.qspace.ExponentMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ExponentMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ExponentMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ExponentMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ExponentMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.qspace.ExponentMsg.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qspace.ExponentMsg.prototype.setValue = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ContextMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.ContextMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ContextMsg.displayName = 'proto.qspace.ContextMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ContextMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ContextMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ContextMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ContextMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    func: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isData: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ContextMsg}
 */
proto.qspace.ContextMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ContextMsg;
  return proto.qspace.ContextMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ContextMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ContextMsg}
 */
proto.qspace.ContextMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunc(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ContextMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ContextMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ContextMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ContextMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFunc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsData();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.qspace.ContextMsg.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.ContextMsg.prototype.setSource = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.qspace.ContextMsg.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ContextMsg.prototype.setLabel = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string func = 3;
 * @return {string}
 */
proto.qspace.ContextMsg.prototype.getFunc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.ContextMsg.prototype.setFunc = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool is_data = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.ContextMsg.prototype.getIsData = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.qspace.ContextMsg.prototype.setIsData = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.LinkMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.LinkMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.LinkMsg.displayName = 'proto.qspace.LinkMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.LinkMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.LinkMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.LinkMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.LinkMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    arg: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.LinkMsg}
 */
proto.qspace.LinkMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.LinkMsg;
  return proto.qspace.LinkMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.LinkMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.LinkMsg}
 */
proto.qspace.LinkMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setArg(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.LinkMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.LinkMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.LinkMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.LinkMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArg();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 arg = 1;
 * @return {number}
 */
proto.qspace.LinkMsg.prototype.getArg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qspace.LinkMsg.prototype.setArg = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.qspace.LinkMsg.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.LinkMsg.prototype.setType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.qspace.LinkMsg.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.LinkMsg.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.LinksMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.LinksMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.LinksMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.LinksMsg.displayName = 'proto.qspace.LinksMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.LinksMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.LinksMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.LinksMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.LinksMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.LinksMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    linksList: jspb.Message.toObjectList(msg.getLinksList(),
    proto.qspace.LinkMsg.toObject, includeInstance),
    ultimateTarget: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.LinksMsg}
 */
proto.qspace.LinksMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.LinksMsg;
  return proto.qspace.LinksMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.LinksMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.LinksMsg}
 */
proto.qspace.LinksMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.LinkMsg;
      reader.readMessage(value,proto.qspace.LinkMsg.deserializeBinaryFromReader);
      msg.addLinks(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUltimateTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.LinksMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.LinksMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.LinksMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.LinksMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.LinkMsg.serializeBinaryToWriter
    );
  }
  f = message.getUltimateTarget();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated LinkMsg links = 1;
 * @return {!Array.<!proto.qspace.LinkMsg>}
 */
proto.qspace.LinksMsg.prototype.getLinksList = function() {
  return /** @type{!Array.<!proto.qspace.LinkMsg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.LinkMsg, 1));
};


/** @param {!Array.<!proto.qspace.LinkMsg>} value */
proto.qspace.LinksMsg.prototype.setLinksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.LinkMsg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.LinkMsg}
 */
proto.qspace.LinksMsg.prototype.addLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.LinkMsg, opt_index);
};


proto.qspace.LinksMsg.prototype.clearLinksList = function() {
  this.setLinksList([]);
};


/**
 * optional bool ultimate_target = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.LinksMsg.prototype.getUltimateTarget = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.qspace.LinksMsg.prototype.setUltimateTarget = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.component_prices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.component_prices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.component_prices.displayName = 'proto.qspace.component_prices';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.component_prices.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.component_prices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.component_prices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.component_prices.toObject = function(includeInstance, msg) {
  var f, obj = {
    pay: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    receive: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.component_prices}
 */
proto.qspace.component_prices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.component_prices;
  return proto.qspace.component_prices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.component_prices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.component_prices}
 */
proto.qspace.component_prices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPay(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReceive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.component_prices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.component_prices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.component_prices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.component_prices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPay();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getReceive();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double pay = 1;
 * @return {number}
 */
proto.qspace.component_prices.prototype.getPay = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.component_prices.prototype.setPay = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double receive = 2;
 * @return {number}
 */
proto.qspace.component_prices.prototype.getReceive = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.component_prices.prototype.setReceive = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.PricingOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.qspace.PricingOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.PricingOutput.displayName = 'proto.qspace.PricingOutput';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.PricingOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.PricingOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.PricingOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PricingOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    delta1pct: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    gamma1pct: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    vega1pt: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    rho10bps: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    theta1d: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    prices: (f = msg.getPrices()) && proto.qspace.component_prices.toObject(includeInstance, f),
    volatility: +jspb.Message.getFieldWithDefault(msg, 101, 0.0),
    error: jspb.Message.getFieldWithDefault(msg, 500, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.PricingOutput}
 */
proto.qspace.PricingOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.PricingOutput;
  return proto.qspace.PricingOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.PricingOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.PricingOutput}
 */
proto.qspace.PricingOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDelta1pct(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGamma1pct(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVega1pt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRho10bps(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTheta1d(value);
      break;
    case 100:
      var value = new proto.qspace.component_prices;
      reader.readMessage(value,proto.qspace.component_prices.deserializeBinaryFromReader);
      msg.setPrices(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolatility(value);
      break;
    case 500:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.PricingOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.PricingOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.PricingOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PricingOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getDelta1pct();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getGamma1pct();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getVega1pt();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getRho10bps();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTheta1d();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPrices();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.qspace.component_prices.serializeBinaryToWriter
    );
  }
  f = message.getVolatility();
  if (f !== 0.0) {
    writer.writeDouble(
      101,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      500,
      f
    );
  }
};


/**
 * optional double price = 1;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double delta_1pct = 2;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getDelta1pct = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setDelta1pct = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double gamma_1pct = 3;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getGamma1pct = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setGamma1pct = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double vega_1pt = 4;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getVega1pt = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setVega1pt = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional double rho_10bps = 5;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getRho10bps = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setRho10bps = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double theta_1d = 6;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getTheta1d = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setTheta1d = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional component_prices prices = 100;
 * @return {?proto.qspace.component_prices}
 */
proto.qspace.PricingOutput.prototype.getPrices = function() {
  return /** @type{?proto.qspace.component_prices} */ (
    jspb.Message.getWrapperField(this, proto.qspace.component_prices, 100));
};


/** @param {?proto.qspace.component_prices|undefined} value */
proto.qspace.PricingOutput.prototype.setPrices = function(value) {
  jspb.Message.setWrapperField(this, 100, value);
};


proto.qspace.PricingOutput.prototype.clearPrices = function() {
  this.setPrices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.PricingOutput.prototype.hasPrices = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional double volatility = 101;
 * @return {number}
 */
proto.qspace.PricingOutput.prototype.getVolatility = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 101, 0.0));
};


/** @param {number} value */
proto.qspace.PricingOutput.prototype.setVolatility = function(value) {
  jspb.Message.setField(this, 101, value);
};


/**
 * optional string error = 500;
 * @return {string}
 */
proto.qspace.PricingOutput.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 500, ""));
};


/** @param {string} value */
proto.qspace.PricingOutput.prototype.setError = function(value) {
  jspb.Message.setField(this, 500, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.PricingResultsMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.PricingResultsMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.PricingResultsMsg.displayName = 'proto.qspace.PricingResultsMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.PricingResultsMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.PricingResultsMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.PricingResultsMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PricingResultsMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: jspb.Message.getFieldWithDefault(msg, 1, ""),
    underlier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vertex: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastUpdated: (f = msg.getLastUpdated()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    output: (f = msg.getOutput()) && proto.qspace.PricingOutput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.PricingResultsMsg}
 */
proto.qspace.PricingResultsMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.PricingResultsMsg;
  return proto.qspace.PricingResultsMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.PricingResultsMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.PricingResultsMsg}
 */
proto.qspace.PricingResultsMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnderlier(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVertex(value);
      break;
    case 4:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    case 5:
      var value = new proto.qspace.PricingOutput;
      reader.readMessage(value,proto.qspace.PricingOutput.deserializeBinaryFromReader);
      msg.setOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.PricingResultsMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.PricingResultsMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.PricingResultsMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PricingResultsMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnderlier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVertex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getOutput();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.qspace.PricingOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product = 1;
 * @return {string}
 */
proto.qspace.PricingResultsMsg.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.PricingResultsMsg.prototype.setProduct = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string underlier = 2;
 * @return {string}
 */
proto.qspace.PricingResultsMsg.prototype.getUnderlier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.PricingResultsMsg.prototype.setUnderlier = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string vertex = 3;
 * @return {string}
 */
proto.qspace.PricingResultsMsg.prototype.getVertex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.PricingResultsMsg.prototype.setVertex = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional DateTimeMsg last_updated = 4;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.PricingResultsMsg.prototype.getLastUpdated = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 4));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.PricingResultsMsg.prototype.setLastUpdated = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.qspace.PricingResultsMsg.prototype.clearLastUpdated = function() {
  this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.PricingResultsMsg.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PricingOutput output = 5;
 * @return {?proto.qspace.PricingOutput}
 */
proto.qspace.PricingResultsMsg.prototype.getOutput = function() {
  return /** @type{?proto.qspace.PricingOutput} */ (
    jspb.Message.getWrapperField(this, proto.qspace.PricingOutput, 5));
};


/** @param {?proto.qspace.PricingOutput|undefined} value */
proto.qspace.PricingResultsMsg.prototype.setOutput = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.qspace.PricingResultsMsg.prototype.clearOutput = function() {
  this.setOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.PricingResultsMsg.prototype.hasOutput = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.DataVertexMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.DataVertexMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.DataVertexMsg.displayName = 'proto.qspace.DataVertexMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.DataVertexMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.DataVertexMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.DataVertexMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DataVertexMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.google.protobuf.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.DataVertexMsg}
 */
proto.qspace.DataVertexMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.DataVertexMsg;
  return proto.qspace.DataVertexMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.DataVertexMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.DataVertexMsg}
 */
proto.qspace.DataVertexMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.DataVertexMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.DataVertexMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.DataVertexMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DataVertexMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any data = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.qspace.DataVertexMsg.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.qspace.DataVertexMsg.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.DataVertexMsg.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.DataVertexMsg.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ErrorMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.ErrorMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ErrorMsg.displayName = 'proto.qspace.ErrorMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ErrorMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ErrorMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ErrorMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ErrorMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ErrorMsg}
 */
proto.qspace.ErrorMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ErrorMsg;
  return proto.qspace.ErrorMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ErrorMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ErrorMsg}
 */
proto.qspace.ErrorMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ErrorMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ErrorMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ErrorMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ErrorMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.ErrorMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.ErrorMsg.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.qspace.ErrorMsg.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ErrorMsg.prototype.setMessage = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ResultMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qspace.ResultMsg.oneofGroups_);
};
goog.inherits(proto.qspace.ResultMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ResultMsg.displayName = 'proto.qspace.ResultMsg';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qspace.ResultMsg.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.qspace.ResultMsg.DataOrErrorCase = {
  DATA_OR_ERROR_NOT_SET: 0,
  DATA: 1,
  ERROR: 2
};

/**
 * @return {proto.qspace.ResultMsg.DataOrErrorCase}
 */
proto.qspace.ResultMsg.prototype.getDataOrErrorCase = function() {
  return /** @type {proto.qspace.ResultMsg.DataOrErrorCase} */(jspb.Message.computeOneofCase(this, proto.qspace.ResultMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ResultMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ResultMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ResultMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ResultMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.google.protobuf.Any.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.qspace.ErrorMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ResultMsg}
 */
proto.qspace.ResultMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ResultMsg;
  return proto.qspace.ResultMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ResultMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ResultMsg}
 */
proto.qspace.ResultMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new proto.qspace.ErrorMsg;
      reader.readMessage(value,proto.qspace.ErrorMsg.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ResultMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ResultMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ResultMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ResultMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.ErrorMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any data = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.qspace.ResultMsg.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.qspace.ResultMsg.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.qspace.ResultMsg.oneofGroups_[0], value);
};


proto.qspace.ResultMsg.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ResultMsg.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ErrorMsg error = 2;
 * @return {?proto.qspace.ErrorMsg}
 */
proto.qspace.ResultMsg.prototype.getError = function() {
  return /** @type{?proto.qspace.ErrorMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ErrorMsg, 2));
};


/** @param {?proto.qspace.ErrorMsg|undefined} value */
proto.qspace.ResultMsg.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.qspace.ResultMsg.oneofGroups_[0], value);
};


proto.qspace.ResultMsg.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ResultMsg.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SourceData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.SourceData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SourceData.displayName = 'proto.qspace.SourceData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SourceData.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SourceData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SourceData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SourceData.toObject = function(includeInstance, msg) {
  var f, obj = {
    edge: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SourceData}
 */
proto.qspace.SourceData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SourceData;
  return proto.qspace.SourceData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SourceData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SourceData}
 */
proto.qspace.SourceData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEdge(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SourceData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SourceData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SourceData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SourceData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdge();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 edge = 1;
 * @return {number}
 */
proto.qspace.SourceData.prototype.getEdge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qspace.SourceData.prototype.setEdge = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.qspace.SourceData.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.SourceData.prototype.setSource = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.FuncVertexMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.FuncVertexMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.FuncVertexMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.FuncVertexMsg.displayName = 'proto.qspace.FuncVertexMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.FuncVertexMsg.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.FuncVertexMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.FuncVertexMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.FuncVertexMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.FuncVertexMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    func: jspb.Message.getFieldWithDefault(msg, 1, ""),
    async: jspb.Message.getFieldWithDefault(msg, 2, false),
    result: (f = msg.getResult()) && proto.qspace.ResultMsg.toObject(includeInstance, f),
    sourcesList: jspb.Message.toObjectList(msg.getSourcesList(),
    proto.qspace.SourceData.toObject, includeInstance),
    funcRef: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ultimateTarget: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.FuncVertexMsg}
 */
proto.qspace.FuncVertexMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.FuncVertexMsg;
  return proto.qspace.FuncVertexMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.FuncVertexMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.FuncVertexMsg}
 */
proto.qspace.FuncVertexMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunc(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsync(value);
      break;
    case 3:
      var value = new proto.qspace.ResultMsg;
      reader.readMessage(value,proto.qspace.ResultMsg.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 4:
      var value = new proto.qspace.SourceData;
      reader.readMessage(value,proto.qspace.SourceData.deserializeBinaryFromReader);
      msg.addSources(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFuncRef(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUltimateTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.FuncVertexMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.FuncVertexMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.FuncVertexMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.FuncVertexMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFunc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAsync();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.ResultMsg.serializeBinaryToWriter
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.qspace.SourceData.serializeBinaryToWriter
    );
  }
  f = message.getFuncRef();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUltimateTarget();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string func = 1;
 * @return {string}
 */
proto.qspace.FuncVertexMsg.prototype.getFunc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.FuncVertexMsg.prototype.setFunc = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool async = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.FuncVertexMsg.prototype.getAsync = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.qspace.FuncVertexMsg.prototype.setAsync = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional ResultMsg result = 3;
 * @return {?proto.qspace.ResultMsg}
 */
proto.qspace.FuncVertexMsg.prototype.getResult = function() {
  return /** @type{?proto.qspace.ResultMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ResultMsg, 3));
};


/** @param {?proto.qspace.ResultMsg|undefined} value */
proto.qspace.FuncVertexMsg.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.qspace.FuncVertexMsg.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.FuncVertexMsg.prototype.hasResult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated SourceData sources = 4;
 * @return {!Array.<!proto.qspace.SourceData>}
 */
proto.qspace.FuncVertexMsg.prototype.getSourcesList = function() {
  return /** @type{!Array.<!proto.qspace.SourceData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.SourceData, 4));
};


/** @param {!Array.<!proto.qspace.SourceData>} value */
proto.qspace.FuncVertexMsg.prototype.setSourcesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.qspace.SourceData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.SourceData}
 */
proto.qspace.FuncVertexMsg.prototype.addSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.qspace.SourceData, opt_index);
};


proto.qspace.FuncVertexMsg.prototype.clearSourcesList = function() {
  this.setSourcesList([]);
};


/**
 * optional string func_ref = 5;
 * @return {string}
 */
proto.qspace.FuncVertexMsg.prototype.getFuncRef = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.qspace.FuncVertexMsg.prototype.setFuncRef = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional bool ultimate_target = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.FuncVertexMsg.prototype.getUltimateTarget = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.qspace.FuncVertexMsg.prototype.setUltimateTarget = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.VertexMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qspace.VertexMsg.oneofGroups_);
};
goog.inherits(proto.qspace.VertexMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.VertexMsg.displayName = 'proto.qspace.VertexMsg';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qspace.VertexMsg.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.qspace.VertexMsg.VertexCase = {
  VERTEX_NOT_SET: 0,
  DATA: 3,
  FUNC: 4
};

/**
 * @return {proto.qspace.VertexMsg.VertexCase}
 */
proto.qspace.VertexMsg.prototype.getVertexCase = function() {
  return /** @type {proto.qspace.VertexMsg.VertexCase} */(jspb.Message.computeOneofCase(this, proto.qspace.VertexMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.VertexMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.VertexMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.VertexMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VertexMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    shortId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.qspace.DataVertexMsg.toObject(includeInstance, f),
    func: (f = msg.getFunc()) && proto.qspace.FuncVertexMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.VertexMsg}
 */
proto.qspace.VertexMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.VertexMsg;
  return proto.qspace.VertexMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.VertexMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.VertexMsg}
 */
proto.qspace.VertexMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortId(value);
      break;
    case 3:
      var value = new proto.qspace.DataVertexMsg;
      reader.readMessage(value,proto.qspace.DataVertexMsg.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new proto.qspace.FuncVertexMsg;
      reader.readMessage(value,proto.qspace.FuncVertexMsg.deserializeBinaryFromReader);
      msg.setFunc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.VertexMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.VertexMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.VertexMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VertexMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getShortId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.DataVertexMsg.serializeBinaryToWriter
    );
  }
  f = message.getFunc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qspace.FuncVertexMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.VertexMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.VertexMsg.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string short_id = 2;
 * @return {string}
 */
proto.qspace.VertexMsg.prototype.getShortId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.VertexMsg.prototype.setShortId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional DataVertexMsg data = 3;
 * @return {?proto.qspace.DataVertexMsg}
 */
proto.qspace.VertexMsg.prototype.getData = function() {
  return /** @type{?proto.qspace.DataVertexMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DataVertexMsg, 3));
};


/** @param {?proto.qspace.DataVertexMsg|undefined} value */
proto.qspace.VertexMsg.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.qspace.VertexMsg.oneofGroups_[0], value);
};


proto.qspace.VertexMsg.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.VertexMsg.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FuncVertexMsg func = 4;
 * @return {?proto.qspace.FuncVertexMsg}
 */
proto.qspace.VertexMsg.prototype.getFunc = function() {
  return /** @type{?proto.qspace.FuncVertexMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.FuncVertexMsg, 4));
};


/** @param {?proto.qspace.FuncVertexMsg|undefined} value */
proto.qspace.VertexMsg.prototype.setFunc = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.qspace.VertexMsg.oneofGroups_[0], value);
};


proto.qspace.VertexMsg.prototype.clearFunc = function() {
  this.setFunc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.VertexMsg.prototype.hasFunc = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.GraphMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.GraphMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.GraphMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.GraphMsg.displayName = 'proto.qspace.GraphMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.GraphMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.GraphMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.GraphMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.GraphMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.GraphMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    verticesList: jspb.Message.toObjectList(msg.getVerticesList(),
    proto.qspace.VertexMsg.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.GraphMsg}
 */
proto.qspace.GraphMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.GraphMsg;
  return proto.qspace.GraphMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.GraphMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.GraphMsg}
 */
proto.qspace.GraphMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.VertexMsg;
      reader.readMessage(value,proto.qspace.VertexMsg.deserializeBinaryFromReader);
      msg.addVertices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.GraphMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.GraphMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.GraphMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.GraphMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerticesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.VertexMsg.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VertexMsg vertices = 1;
 * @return {!Array.<!proto.qspace.VertexMsg>}
 */
proto.qspace.GraphMsg.prototype.getVerticesList = function() {
  return /** @type{!Array.<!proto.qspace.VertexMsg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.VertexMsg, 1));
};


/** @param {!Array.<!proto.qspace.VertexMsg>} value */
proto.qspace.GraphMsg.prototype.setVerticesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.VertexMsg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.VertexMsg}
 */
proto.qspace.GraphMsg.prototype.addVertices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.VertexMsg, opt_index);
};


proto.qspace.GraphMsg.prototype.clearVerticesList = function() {
  this.setVerticesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.ScenarioData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioData.displayName = 'proto.qspace.ScenarioData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioData.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioData.toObject = function(includeInstance, msg) {
  var f, obj = {
    predicate: (f = msg.getPredicate()) && proto.google.protobuf.Any.toObject(includeInstance, f),
    shift: (f = msg.getShift()) && proto.google.protobuf.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioData}
 */
proto.qspace.ScenarioData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioData;
  return proto.qspace.ScenarioData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioData}
 */
proto.qspace.ScenarioData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.setPredicate(value);
      break;
    case 2:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.setShift(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPredicate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
  f = message.getShift();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any predicate = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.qspace.ScenarioData.prototype.getPredicate = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Any, 1));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.qspace.ScenarioData.prototype.setPredicate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.ScenarioData.prototype.clearPredicate = function() {
  this.setPredicate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ScenarioData.prototype.hasPredicate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Any shift = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.qspace.ScenarioData.prototype.getShift = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Any, 2));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.qspace.ScenarioData.prototype.setShift = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.ScenarioData.prototype.clearShift = function() {
  this.setShift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ScenarioData.prototype.hasShift = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioBatchData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.ScenarioBatchData.repeatedFields_, null);
};
goog.inherits(proto.qspace.ScenarioBatchData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioBatchData.displayName = 'proto.qspace.ScenarioBatchData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.ScenarioBatchData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioBatchData.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioBatchData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioBatchData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioBatchData.toObject = function(includeInstance, msg) {
  var f, obj = {
    scenariosList: jspb.Message.toObjectList(msg.getScenariosList(),
    proto.qspace.ScenarioData.toObject, includeInstance),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioBatchData}
 */
proto.qspace.ScenarioBatchData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioBatchData;
  return proto.qspace.ScenarioBatchData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioBatchData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioBatchData}
 */
proto.qspace.ScenarioBatchData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.ScenarioData;
      reader.readMessage(value,proto.qspace.ScenarioData.deserializeBinaryFromReader);
      msg.addScenarios(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioBatchData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioBatchData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioBatchData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioBatchData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScenariosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.ScenarioData.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated ScenarioData scenarios = 1;
 * @return {!Array.<!proto.qspace.ScenarioData>}
 */
proto.qspace.ScenarioBatchData.prototype.getScenariosList = function() {
  return /** @type{!Array.<!proto.qspace.ScenarioData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.ScenarioData, 1));
};


/** @param {!Array.<!proto.qspace.ScenarioData>} value */
proto.qspace.ScenarioBatchData.prototype.setScenariosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.ScenarioData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.ScenarioData}
 */
proto.qspace.ScenarioBatchData.prototype.addScenarios = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.ScenarioData, opt_index);
};


proto.qspace.ScenarioBatchData.prototype.clearScenariosList = function() {
  this.setScenariosList([]);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.qspace.ScenarioBatchData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ScenarioBatchData.prototype.setId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.qspace.ScenarioBatchData.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.ScenarioBatchData.prototype.setLabel = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioReportMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.ScenarioReportMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.ScenarioReportMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioReportMsg.displayName = 'proto.qspace.ScenarioReportMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.ScenarioReportMsg.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioReportMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioReportMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioReportMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioReportMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scenarioBatchesList: jspb.Message.toObjectList(msg.getScenarioBatchesList(),
    proto.qspace.ScenarioBatchData.toObject, includeInstance),
    processor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    baseTargetsList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioReportMsg}
 */
proto.qspace.ScenarioReportMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioReportMsg;
  return proto.qspace.ScenarioReportMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioReportMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioReportMsg}
 */
proto.qspace.ScenarioReportMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.qspace.ScenarioBatchData;
      reader.readMessage(value,proto.qspace.ScenarioBatchData.deserializeBinaryFromReader);
      msg.addScenarioBatches(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addBaseTargets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioReportMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioReportMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioReportMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioReportMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScenarioBatchesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.qspace.ScenarioBatchData.serializeBinaryToWriter
    );
  }
  f = message.getProcessor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBaseTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.ScenarioReportMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.ScenarioReportMsg.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated ScenarioBatchData scenario_batches = 2;
 * @return {!Array.<!proto.qspace.ScenarioBatchData>}
 */
proto.qspace.ScenarioReportMsg.prototype.getScenarioBatchesList = function() {
  return /** @type{!Array.<!proto.qspace.ScenarioBatchData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.ScenarioBatchData, 2));
};


/** @param {!Array.<!proto.qspace.ScenarioBatchData>} value */
proto.qspace.ScenarioReportMsg.prototype.setScenarioBatchesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.qspace.ScenarioBatchData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.ScenarioBatchData}
 */
proto.qspace.ScenarioReportMsg.prototype.addScenarioBatches = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.qspace.ScenarioBatchData, opt_index);
};


proto.qspace.ScenarioReportMsg.prototype.clearScenarioBatchesList = function() {
  this.setScenarioBatchesList([]);
};


/**
 * optional string processor = 3;
 * @return {string}
 */
proto.qspace.ScenarioReportMsg.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.ScenarioReportMsg.prototype.setProcessor = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated string base_targets = 4;
 * @return {!Array.<string>}
 */
proto.qspace.ScenarioReportMsg.prototype.getBaseTargetsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.qspace.ScenarioReportMsg.prototype.setBaseTargetsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.qspace.ScenarioReportMsg.prototype.addBaseTargets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.qspace.ScenarioReportMsg.prototype.clearBaseTargetsList = function() {
  this.setBaseTargetsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioResultsMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.ScenarioResultsMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioResultsMsg.displayName = 'proto.qspace.ScenarioResultsMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioResultsMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioResultsMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioResultsMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioResultsMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: jspb.Message.getFieldWithDefault(msg, 1, ""),
    run: jspb.Message.getFieldWithDefault(msg, 2, ""),
    batch: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vertex: jspb.Message.getFieldWithDefault(msg, 4, ""),
    output: (f = msg.getOutput()) && proto.qspace.PricingOutput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioResultsMsg}
 */
proto.qspace.ScenarioResultsMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioResultsMsg;
  return proto.qspace.ScenarioResultsMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioResultsMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioResultsMsg}
 */
proto.qspace.ScenarioResultsMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRun(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatch(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVertex(value);
      break;
    case 5:
      var value = new proto.qspace.PricingOutput;
      reader.readMessage(value,proto.qspace.PricingOutput.deserializeBinaryFromReader);
      msg.setOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioResultsMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioResultsMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioResultsMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioResultsMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRun();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBatch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVertex();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOutput();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.qspace.PricingOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional string product = 1;
 * @return {string}
 */
proto.qspace.ScenarioResultsMsg.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.ScenarioResultsMsg.prototype.setProduct = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string run = 2;
 * @return {string}
 */
proto.qspace.ScenarioResultsMsg.prototype.getRun = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ScenarioResultsMsg.prototype.setRun = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string batch = 3;
 * @return {string}
 */
proto.qspace.ScenarioResultsMsg.prototype.getBatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.ScenarioResultsMsg.prototype.setBatch = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string vertex = 4;
 * @return {string}
 */
proto.qspace.ScenarioResultsMsg.prototype.getVertex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.qspace.ScenarioResultsMsg.prototype.setVertex = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional PricingOutput output = 5;
 * @return {?proto.qspace.PricingOutput}
 */
proto.qspace.ScenarioResultsMsg.prototype.getOutput = function() {
  return /** @type{?proto.qspace.PricingOutput} */ (
    jspb.Message.getWrapperField(this, proto.qspace.PricingOutput, 5));
};


/** @param {?proto.qspace.PricingOutput|undefined} value */
proto.qspace.ScenarioResultsMsg.prototype.setOutput = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.qspace.ScenarioResultsMsg.prototype.clearOutput = function() {
  this.setOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.ScenarioResultsMsg.prototype.hasOutput = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.ScenarioRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.ScenarioRequest.repeatedFields_, null);
};
goog.inherits(proto.qspace.ScenarioRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.ScenarioRequest.displayName = 'proto.qspace.ScenarioRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.ScenarioRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.ScenarioRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.ScenarioRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.ScenarioRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scenarioReportId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ultimateTargetsList: jspb.Message.getRepeatedField(msg, 3),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.ScenarioRequest}
 */
proto.qspace.ScenarioRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.ScenarioRequest;
  return proto.qspace.ScenarioRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.ScenarioRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.ScenarioRequest}
 */
proto.qspace.ScenarioRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScenarioReportId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addUltimateTargets(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.ScenarioRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.ScenarioRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.ScenarioRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.ScenarioRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScenarioReportId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUltimateTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.ScenarioRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.ScenarioRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string scenario_report_id = 2;
 * @return {string}
 */
proto.qspace.ScenarioRequest.prototype.getScenarioReportId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.ScenarioRequest.prototype.setScenarioReportId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated string ultimate_targets = 3;
 * @return {!Array.<string>}
 */
proto.qspace.ScenarioRequest.prototype.getUltimateTargetsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.qspace.ScenarioRequest.prototype.setUltimateTargetsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.qspace.ScenarioRequest.prototype.addUltimateTargets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.qspace.ScenarioRequest.prototype.clearUltimateTargetsList = function() {
  this.setUltimateTargetsList([]);
};


/**
 * optional string timestamp = 4;
 * @return {string}
 */
proto.qspace.ScenarioRequest.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.qspace.ScenarioRequest.prototype.setTimestamp = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SourcesMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.SourcesMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.SourcesMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SourcesMsg.displayName = 'proto.qspace.SourcesMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.SourcesMsg.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SourcesMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SourcesMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SourcesMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SourcesMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourcesList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SourcesMsg}
 */
proto.qspace.SourcesMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SourcesMsg;
  return proto.qspace.SourcesMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SourcesMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SourcesMsg}
 */
proto.qspace.SourcesMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SourcesMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SourcesMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SourcesMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SourcesMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.SourcesMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.SourcesMsg.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string sources = 2;
 * @return {!Array.<string>}
 */
proto.qspace.SourcesMsg.prototype.getSourcesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.qspace.SourcesMsg.prototype.setSourcesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.qspace.SourcesMsg.prototype.addSources = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.qspace.SourcesMsg.prototype.clearSourcesList = function() {
  this.setSourcesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.DividendStreamEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.DividendStreamEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.DividendStreamEntry.displayName = 'proto.qspace.DividendStreamEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.DividendStreamEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.DividendStreamEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.DividendStreamEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DividendStreamEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    value: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.DividendStreamEntry}
 */
proto.qspace.DividendStreamEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.DividendStreamEntry;
  return proto.qspace.DividendStreamEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.DividendStreamEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.DividendStreamEntry}
 */
proto.qspace.DividendStreamEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.DividendStreamEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.DividendStreamEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.DividendStreamEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DividendStreamEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional DateTimeMsg date = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.DividendStreamEntry.prototype.getDate = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.DividendStreamEntry.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.DividendStreamEntry.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.DividendStreamEntry.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.qspace.DividendStreamEntry.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.DividendStreamEntry.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.DividendStreamMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.DividendStreamMsg.repeatedFields_, null);
};
goog.inherits(proto.qspace.DividendStreamMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.DividendStreamMsg.displayName = 'proto.qspace.DividendStreamMsg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.DividendStreamMsg.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.DividendStreamMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.DividendStreamMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.DividendStreamMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DividendStreamMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.qspace.DividendStreamEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.DividendStreamMsg}
 */
proto.qspace.DividendStreamMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.DividendStreamMsg;
  return proto.qspace.DividendStreamMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.DividendStreamMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.DividendStreamMsg}
 */
proto.qspace.DividendStreamMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DividendStreamEntry;
      reader.readMessage(value,proto.qspace.DividendStreamEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.DividendStreamMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.DividendStreamMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.DividendStreamMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.DividendStreamMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qspace.DividendStreamEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DividendStreamEntry entries = 1;
 * @return {!Array.<!proto.qspace.DividendStreamEntry>}
 */
proto.qspace.DividendStreamMsg.prototype.getEntriesList = function() {
  return /** @type{!Array.<!proto.qspace.DividendStreamEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.DividendStreamEntry, 1));
};


/** @param {!Array.<!proto.qspace.DividendStreamEntry>} value */
proto.qspace.DividendStreamMsg.prototype.setEntriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qspace.DividendStreamEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.DividendStreamEntry}
 */
proto.qspace.DividendStreamMsg.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qspace.DividendStreamEntry, opt_index);
};


proto.qspace.DividendStreamMsg.prototype.clearEntriesList = function() {
  this.setEntriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.SwapMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapMsg.displayName = 'proto.qspace.SwapMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    pay: (f = msg.getPay()) && proto.qspace.SwapMsg.Leg.toObject(includeInstance, f),
    receive: (f = msg.getReceive()) && proto.qspace.SwapMsg.Leg.toObject(includeInstance, f),
    counterparty: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapMsg}
 */
proto.qspace.SwapMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapMsg;
  return proto.qspace.SwapMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapMsg}
 */
proto.qspace.SwapMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.SwapMsg.Leg;
      reader.readMessage(value,proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader);
      msg.setPay(value);
      break;
    case 2:
      var value = new proto.qspace.SwapMsg.Leg;
      reader.readMessage(value,proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader);
      msg.setReceive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterparty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPay();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.SwapMsg.Leg.serializeBinaryToWriter
    );
  }
  f = message.getReceive();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.SwapMsg.Leg.serializeBinaryToWriter
    );
  }
  f = message.getCounterparty();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapMsg.Leg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qspace.SwapMsg.Leg.repeatedFields_, proto.qspace.SwapMsg.Leg.oneofGroups_);
};
goog.inherits(proto.qspace.SwapMsg.Leg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapMsg.Leg.displayName = 'proto.qspace.SwapMsg.Leg';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qspace.SwapMsg.Leg.repeatedFields_ = [5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qspace.SwapMsg.Leg.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.qspace.SwapMsg.Leg.RateCase = {
  RATE_NOT_SET: 0,
  FLOAT_RATE: 1,
  FIXED_RATE: 2
};

/**
 * @return {proto.qspace.SwapMsg.Leg.RateCase}
 */
proto.qspace.SwapMsg.Leg.prototype.getRateCase = function() {
  return /** @type {proto.qspace.SwapMsg.Leg.RateCase} */(jspb.Message.computeOneofCase(this, proto.qspace.SwapMsg.Leg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapMsg.Leg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapMsg.Leg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapMsg.Leg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.toObject = function(includeInstance, msg) {
  var f, obj = {
    floatRate: (f = msg.getFloatRate()) && proto.qspace.FloatRate.toObject(includeInstance, f),
    fixedRate: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    discountCurve: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 4, ""),
    scheduleList: jspb.Message.toObjectList(msg.getScheduleList(),
    proto.qspace.SwapMsg.Leg.Period.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.Leg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapMsg.Leg;
  return proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapMsg.Leg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.Leg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.FloatRate;
      reader.readMessage(value,proto.qspace.FloatRate.deserializeBinaryFromReader);
      msg.setFloatRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFixedRate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDiscountCurve(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 5:
      var value = new proto.qspace.SwapMsg.Leg.Period;
      reader.readMessage(value,proto.qspace.SwapMsg.Leg.Period.deserializeBinaryFromReader);
      msg.addSchedule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapMsg.Leg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapMsg.Leg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapMsg.Leg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFloatRate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.FloatRate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDiscountCurve();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScheduleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.qspace.SwapMsg.Leg.Period.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.SwapMsg.Leg.Period = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.SwapMsg.Leg.Period, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.SwapMsg.Leg.Period.displayName = 'proto.qspace.SwapMsg.Leg.Period';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.SwapMsg.Leg.Period.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.SwapMsg.Leg.Period} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.Period.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    fixingStart: (f = msg.getFixingStart()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    fixingEnd: (f = msg.getFixingEnd()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    yearFraction: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    notional: +jspb.Message.getFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.SwapMsg.Leg.Period}
 */
proto.qspace.SwapMsg.Leg.Period.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.SwapMsg.Leg.Period;
  return proto.qspace.SwapMsg.Leg.Period.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.SwapMsg.Leg.Period} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.SwapMsg.Leg.Period}
 */
proto.qspace.SwapMsg.Leg.Period.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 3:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setFixingStart(value);
      break;
    case 4:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setFixingEnd(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYearFraction(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNotional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.SwapMsg.Leg.Period.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.SwapMsg.Leg.Period} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.SwapMsg.Leg.Period.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getFixingStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getFixingEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getYearFraction();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getNotional();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional DateTimeMsg start = 1;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getStart = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 1));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setStart = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearStart = function() {
  this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DateTimeMsg end = 2;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getEnd = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 2));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DateTimeMsg fixing_start = 3;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getFixingStart = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 3));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setFixingStart = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearFixingStart = function() {
  this.setFixingStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasFixingStart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DateTimeMsg fixing_end = 4;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getFixingEnd = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 4));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setFixingEnd = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.qspace.SwapMsg.Leg.Period.prototype.clearFixingEnd = function() {
  this.setFixingEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.hasFixingEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double year_fraction = 5;
 * @return {number}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getYearFraction = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setYearFraction = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double notional = 6;
 * @return {number}
 */
proto.qspace.SwapMsg.Leg.Period.prototype.getNotional = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.qspace.SwapMsg.Leg.Period.prototype.setNotional = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional FloatRate float_rate = 1;
 * @return {?proto.qspace.FloatRate}
 */
proto.qspace.SwapMsg.Leg.prototype.getFloatRate = function() {
  return /** @type{?proto.qspace.FloatRate} */ (
    jspb.Message.getWrapperField(this, proto.qspace.FloatRate, 1));
};


/** @param {?proto.qspace.FloatRate|undefined} value */
proto.qspace.SwapMsg.Leg.prototype.setFloatRate = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.qspace.SwapMsg.Leg.oneofGroups_[0], value);
};


proto.qspace.SwapMsg.Leg.prototype.clearFloatRate = function() {
  this.setFloatRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.prototype.hasFloatRate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double fixed_rate = 2;
 * @return {number}
 */
proto.qspace.SwapMsg.Leg.prototype.getFixedRate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.SwapMsg.Leg.prototype.setFixedRate = function(value) {
  jspb.Message.setOneofField(this, 2, proto.qspace.SwapMsg.Leg.oneofGroups_[0], value);
};


proto.qspace.SwapMsg.Leg.prototype.clearFixedRate = function() {
  jspb.Message.setOneofField(this, 2, proto.qspace.SwapMsg.Leg.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.Leg.prototype.hasFixedRate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string discount_curve = 3;
 * @return {string}
 */
proto.qspace.SwapMsg.Leg.prototype.getDiscountCurve = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.SwapMsg.Leg.prototype.setDiscountCurve = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string currency = 4;
 * @return {string}
 */
proto.qspace.SwapMsg.Leg.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.qspace.SwapMsg.Leg.prototype.setCurrency = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated Period schedule = 5;
 * @return {!Array.<!proto.qspace.SwapMsg.Leg.Period>}
 */
proto.qspace.SwapMsg.Leg.prototype.getScheduleList = function() {
  return /** @type{!Array.<!proto.qspace.SwapMsg.Leg.Period>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qspace.SwapMsg.Leg.Period, 5));
};


/** @param {!Array.<!proto.qspace.SwapMsg.Leg.Period>} value */
proto.qspace.SwapMsg.Leg.prototype.setScheduleList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.qspace.SwapMsg.Leg.Period=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qspace.SwapMsg.Leg.Period}
 */
proto.qspace.SwapMsg.Leg.prototype.addSchedule = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.qspace.SwapMsg.Leg.Period, opt_index);
};


proto.qspace.SwapMsg.Leg.prototype.clearScheduleList = function() {
  this.setScheduleList([]);
};


/**
 * optional Leg pay = 1;
 * @return {?proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.prototype.getPay = function() {
  return /** @type{?proto.qspace.SwapMsg.Leg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapMsg.Leg, 1));
};


/** @param {?proto.qspace.SwapMsg.Leg|undefined} value */
proto.qspace.SwapMsg.prototype.setPay = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.SwapMsg.prototype.clearPay = function() {
  this.setPay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.prototype.hasPay = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Leg receive = 2;
 * @return {?proto.qspace.SwapMsg.Leg}
 */
proto.qspace.SwapMsg.prototype.getReceive = function() {
  return /** @type{?proto.qspace.SwapMsg.Leg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapMsg.Leg, 2));
};


/** @param {?proto.qspace.SwapMsg.Leg|undefined} value */
proto.qspace.SwapMsg.prototype.setReceive = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qspace.SwapMsg.prototype.clearReceive = function() {
  this.setReceive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.SwapMsg.prototype.hasReceive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string counterparty = 3;
 * @return {string}
 */
proto.qspace.SwapMsg.prototype.getCounterparty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.SwapMsg.prototype.setCounterparty = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.IdentityPredicateMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.IdentityPredicateMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.IdentityPredicateMsg.displayName = 'proto.qspace.IdentityPredicateMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.IdentityPredicateMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.IdentityPredicateMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.IdentityPredicateMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.IdentityPredicateMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.IdentityPredicateMsg}
 */
proto.qspace.IdentityPredicateMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.IdentityPredicateMsg;
  return proto.qspace.IdentityPredicateMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.IdentityPredicateMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.IdentityPredicateMsg}
 */
proto.qspace.IdentityPredicateMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.IdentityPredicateMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.IdentityPredicateMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.IdentityPredicateMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.IdentityPredicateMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.qspace.IdentityPredicateMsg.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.IdentityPredicateMsg.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.PriceShiftMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.PriceShiftMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.PriceShiftMsg.displayName = 'proto.qspace.PriceShiftMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.PriceShiftMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.PriceShiftMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.PriceShiftMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PriceShiftMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    isRelative: jspb.Message.getFieldWithDefault(msg, 1, false),
    amount: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.PriceShiftMsg}
 */
proto.qspace.PriceShiftMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.PriceShiftMsg;
  return proto.qspace.PriceShiftMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.PriceShiftMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.PriceShiftMsg}
 */
proto.qspace.PriceShiftMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRelative(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.PriceShiftMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.PriceShiftMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.PriceShiftMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PriceShiftMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsRelative();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional bool is_relative = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qspace.PriceShiftMsg.prototype.getIsRelative = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.qspace.PriceShiftMsg.prototype.setIsRelative = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.qspace.PriceShiftMsg.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qspace.PriceShiftMsg.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.TimeShiftMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.TimeShiftMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.TimeShiftMsg.displayName = 'proto.qspace.TimeShiftMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.TimeShiftMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.TimeShiftMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.TimeShiftMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.TimeShiftMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    days: +jspb.Message.getFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.TimeShiftMsg}
 */
proto.qspace.TimeShiftMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.TimeShiftMsg;
  return proto.qspace.TimeShiftMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.TimeShiftMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.TimeShiftMsg}
 */
proto.qspace.TimeShiftMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.TimeShiftMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.TimeShiftMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.TimeShiftMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.TimeShiftMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDays();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double days = 1;
 * @return {number}
 */
proto.qspace.TimeShiftMsg.prototype.getDays = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.TimeShiftMsg.prototype.setDays = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.VolatilityShiftMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.VolatilityShiftMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.VolatilityShiftMsg.displayName = 'proto.qspace.VolatilityShiftMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.VolatilityShiftMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.VolatilityShiftMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.VolatilityShiftMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VolatilityShiftMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: +jspb.Message.getFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.VolatilityShiftMsg}
 */
proto.qspace.VolatilityShiftMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.VolatilityShiftMsg;
  return proto.qspace.VolatilityShiftMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.VolatilityShiftMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.VolatilityShiftMsg}
 */
proto.qspace.VolatilityShiftMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.VolatilityShiftMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.VolatilityShiftMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.VolatilityShiftMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VolatilityShiftMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double amount = 1;
 * @return {number}
 */
proto.qspace.VolatilityShiftMsg.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.qspace.VolatilityShiftMsg.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.VersionMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.VersionMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.VersionMsg.displayName = 'proto.qspace.VersionMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.VersionMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.VersionMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.VersionMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VersionMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverVersion: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.VersionMsg}
 */
proto.qspace.VersionMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.VersionMsg;
  return proto.qspace.VersionMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.VersionMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.VersionMsg}
 */
proto.qspace.VersionMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.VersionMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.VersionMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.VersionMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.VersionMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string server_version = 1;
 * @return {string}
 */
proto.qspace.VersionMsg.prototype.getServerVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.VersionMsg.prototype.setServerVersion = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.UnderlierAttributesMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.UnderlierAttributesMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.UnderlierAttributesMsg.displayName = 'proto.qspace.UnderlierAttributesMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.UnderlierAttributesMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.UnderlierAttributesMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.UnderlierAttributesMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.UnderlierAttributesMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    underlier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assetType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sector: jspb.Message.getFieldWithDefault(msg, 3, ""),
    industry: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.UnderlierAttributesMsg}
 */
proto.qspace.UnderlierAttributesMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.UnderlierAttributesMsg;
  return proto.qspace.UnderlierAttributesMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.UnderlierAttributesMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.UnderlierAttributesMsg}
 */
proto.qspace.UnderlierAttributesMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnderlier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSector(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndustry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.UnderlierAttributesMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.UnderlierAttributesMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.UnderlierAttributesMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.UnderlierAttributesMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnderlier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAssetType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSector();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIndustry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string underlier = 1;
 * @return {string}
 */
proto.qspace.UnderlierAttributesMsg.prototype.getUnderlier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.UnderlierAttributesMsg.prototype.setUnderlier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string asset_type = 2;
 * @return {string}
 */
proto.qspace.UnderlierAttributesMsg.prototype.getAssetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.UnderlierAttributesMsg.prototype.setAssetType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string sector = 3;
 * @return {string}
 */
proto.qspace.UnderlierAttributesMsg.prototype.getSector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.qspace.UnderlierAttributesMsg.prototype.setSector = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string industry = 4;
 * @return {string}
 */
proto.qspace.UnderlierAttributesMsg.prototype.getIndustry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.qspace.UnderlierAttributesMsg.prototype.setIndustry = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.PositionMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qspace.PositionMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.PositionMsg.displayName = 'proto.qspace.PositionMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.PositionMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.PositionMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.PositionMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PositionMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: jspb.Message.getFieldWithDefault(msg, 1, ""),
    account: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quantity: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    book: jspb.Message.getFieldWithDefault(msg, 4, ""),
    desk: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.PositionMsg}
 */
proto.qspace.PositionMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.PositionMsg;
  return proto.qspace.PositionMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.PositionMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.PositionMsg}
 */
proto.qspace.PositionMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuantity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBook(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.PositionMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.PositionMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.PositionMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.PositionMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getBook();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDesk();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string product = 1;
 * @return {string}
 */
proto.qspace.PositionMsg.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qspace.PositionMsg.prototype.setProduct = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string account = 2;
 * @return {string}
 */
proto.qspace.PositionMsg.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qspace.PositionMsg.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double quantity = 3;
 * @return {number}
 */
proto.qspace.PositionMsg.prototype.getQuantity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.qspace.PositionMsg.prototype.setQuantity = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string book = 4;
 * @return {string}
 */
proto.qspace.PositionMsg.prototype.getBook = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.qspace.PositionMsg.prototype.setBook = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string desk = 5;
 * @return {string}
 */
proto.qspace.PositionMsg.prototype.getDesk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.qspace.PositionMsg.prototype.setDesk = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qspace.Wrapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qspace.Wrapper.oneofGroups_);
};
goog.inherits(proto.qspace.Wrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qspace.Wrapper.displayName = 'proto.qspace.Wrapper';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qspace.Wrapper.oneofGroups_ = [[2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,38,39,40,41]];

/**
 * @enum {number}
 */
proto.qspace.Wrapper.ContentCase = {
  CONTENT_NOT_SET: 0,
  PRODUCT_DETAILS: 2,
  PRODUCT_DATA: 3,
  DATE_TIME: 4,
  RATE_CURVE: 7,
  TIME_SERIES: 8,
  HOLIDAY_CALENDAR: 9,
  SWAP_DEFINITION: 10,
  FREQUENCY: 11,
  OPTION: 12,
  PRICE: 13,
  VOL_SURFACE: 14,
  CONTEXT: 15,
  LINKS: 16,
  PRICING_RESULTS: 17,
  PRICING_OUTPUT: 18,
  GRAPH: 19,
  STATUS: 20,
  SCENARIO_REPORT: 21,
  SCENARIO_RESULTS: 22,
  SCENARIO_REQUEST: 23,
  SOURCES: 24,
  DOUBLE_MSG: 25,
  INT_MSG: 27,
  EXPONENT: 28,
  RATE: 30,
  DIVIDEND_STREAM: 31,
  SWAP: 32,
  IDENTITY_PREDICATE: 33,
  PRICE_SHIFT: 34,
  RATE_CURVE_SHIFT: 35,
  TIME_SHIFT: 36,
  VOLATILITY_SHIFT: 37,
  VERTEX: 38,
  VERSION: 39,
  UNDERLIER_ATTRIBUTES: 40,
  POSITION: 41
};

/**
 * @return {proto.qspace.Wrapper.ContentCase}
 */
proto.qspace.Wrapper.prototype.getContentCase = function() {
  return /** @type {proto.qspace.Wrapper.ContentCase} */(jspb.Message.computeOneofCase(this, proto.qspace.Wrapper.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qspace.Wrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.qspace.Wrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qspace.Wrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.Wrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.qspace.DataKey.toObject(includeInstance, f),
    productDetails: (f = msg.getProductDetails()) && proto.qspace.ProductDetailsMsg.toObject(includeInstance, f),
    productData: (f = msg.getProductData()) && proto.qspace.ProductData.toObject(includeInstance, f),
    dateTime: (f = msg.getDateTime()) && proto.qspace.DateTimeMsg.toObject(includeInstance, f),
    rateCurve: (f = msg.getRateCurve()) && proto.qspace.RateCurveMsg.toObject(includeInstance, f),
    timeSeries: (f = msg.getTimeSeries()) && proto.qspace.TimeSeriesMsg.toObject(includeInstance, f),
    holidayCalendar: (f = msg.getHolidayCalendar()) && proto.qspace.HolidayCalendarMsg.toObject(includeInstance, f),
    swapDefinition: (f = msg.getSwapDefinition()) && proto.qspace.SwapDefinitionMsg.toObject(includeInstance, f),
    frequency: (f = msg.getFrequency()) && proto.qspace.Frequency.toObject(includeInstance, f),
    option: (f = msg.getOption()) && proto.qspace.OptionMsg.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && proto.qspace.PriceMsg.toObject(includeInstance, f),
    volSurface: (f = msg.getVolSurface()) && proto.qspace.VolSurfaceMsg.toObject(includeInstance, f),
    context: (f = msg.getContext()) && proto.qspace.ContextMsg.toObject(includeInstance, f),
    links: (f = msg.getLinks()) && proto.qspace.LinksMsg.toObject(includeInstance, f),
    pricingResults: (f = msg.getPricingResults()) && proto.qspace.PricingResultsMsg.toObject(includeInstance, f),
    pricingOutput: (f = msg.getPricingOutput()) && proto.qspace.PricingOutput.toObject(includeInstance, f),
    graph: (f = msg.getGraph()) && proto.qspace.GraphMsg.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.qspace.StatusMsg.toObject(includeInstance, f),
    scenarioReport: (f = msg.getScenarioReport()) && proto.qspace.ScenarioReportMsg.toObject(includeInstance, f),
    scenarioResults: (f = msg.getScenarioResults()) && proto.qspace.ScenarioResultsMsg.toObject(includeInstance, f),
    scenarioRequest: (f = msg.getScenarioRequest()) && proto.qspace.ScenarioRequest.toObject(includeInstance, f),
    sources: (f = msg.getSources()) && proto.qspace.SourcesMsg.toObject(includeInstance, f),
    doubleMsg: (f = msg.getDoubleMsg()) && proto.qspace.DoubleMsg.toObject(includeInstance, f),
    intMsg: (f = msg.getIntMsg()) && proto.qspace.IntMsg.toObject(includeInstance, f),
    exponent: (f = msg.getExponent()) && proto.qspace.ExponentMsg.toObject(includeInstance, f),
    rate: (f = msg.getRate()) && proto.qspace.RateMsg.toObject(includeInstance, f),
    dividendStream: (f = msg.getDividendStream()) && proto.qspace.DividendStreamMsg.toObject(includeInstance, f),
    swap: (f = msg.getSwap()) && proto.qspace.SwapMsg.toObject(includeInstance, f),
    identityPredicate: (f = msg.getIdentityPredicate()) && proto.qspace.IdentityPredicateMsg.toObject(includeInstance, f),
    priceShift: (f = msg.getPriceShift()) && proto.qspace.PriceShiftMsg.toObject(includeInstance, f),
    rateCurveShift: (f = msg.getRateCurveShift()) && proto.qspace.RateCurveShiftMsg.toObject(includeInstance, f),
    timeShift: (f = msg.getTimeShift()) && proto.qspace.TimeShiftMsg.toObject(includeInstance, f),
    volatilityShift: (f = msg.getVolatilityShift()) && proto.qspace.VolatilityShiftMsg.toObject(includeInstance, f),
    vertex: (f = msg.getVertex()) && proto.qspace.VertexMsg.toObject(includeInstance, f),
    version: (f = msg.getVersion()) && proto.qspace.VersionMsg.toObject(includeInstance, f),
    underlierAttributes: (f = msg.getUnderlierAttributes()) && proto.qspace.UnderlierAttributesMsg.toObject(includeInstance, f),
    position: (f = msg.getPosition()) && proto.qspace.PositionMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qspace.Wrapper}
 */
proto.qspace.Wrapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qspace.Wrapper;
  return proto.qspace.Wrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qspace.Wrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qspace.Wrapper}
 */
proto.qspace.Wrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qspace.DataKey;
      reader.readMessage(value,proto.qspace.DataKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.qspace.ProductDetailsMsg;
      reader.readMessage(value,proto.qspace.ProductDetailsMsg.deserializeBinaryFromReader);
      msg.setProductDetails(value);
      break;
    case 3:
      var value = new proto.qspace.ProductData;
      reader.readMessage(value,proto.qspace.ProductData.deserializeBinaryFromReader);
      msg.setProductData(value);
      break;
    case 4:
      var value = new proto.qspace.DateTimeMsg;
      reader.readMessage(value,proto.qspace.DateTimeMsg.deserializeBinaryFromReader);
      msg.setDateTime(value);
      break;
    case 7:
      var value = new proto.qspace.RateCurveMsg;
      reader.readMessage(value,proto.qspace.RateCurveMsg.deserializeBinaryFromReader);
      msg.setRateCurve(value);
      break;
    case 8:
      var value = new proto.qspace.TimeSeriesMsg;
      reader.readMessage(value,proto.qspace.TimeSeriesMsg.deserializeBinaryFromReader);
      msg.setTimeSeries(value);
      break;
    case 9:
      var value = new proto.qspace.HolidayCalendarMsg;
      reader.readMessage(value,proto.qspace.HolidayCalendarMsg.deserializeBinaryFromReader);
      msg.setHolidayCalendar(value);
      break;
    case 10:
      var value = new proto.qspace.SwapDefinitionMsg;
      reader.readMessage(value,proto.qspace.SwapDefinitionMsg.deserializeBinaryFromReader);
      msg.setSwapDefinition(value);
      break;
    case 11:
      var value = new proto.qspace.Frequency;
      reader.readMessage(value,proto.qspace.Frequency.deserializeBinaryFromReader);
      msg.setFrequency(value);
      break;
    case 12:
      var value = new proto.qspace.OptionMsg;
      reader.readMessage(value,proto.qspace.OptionMsg.deserializeBinaryFromReader);
      msg.setOption(value);
      break;
    case 13:
      var value = new proto.qspace.PriceMsg;
      reader.readMessage(value,proto.qspace.PriceMsg.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 14:
      var value = new proto.qspace.VolSurfaceMsg;
      reader.readMessage(value,proto.qspace.VolSurfaceMsg.deserializeBinaryFromReader);
      msg.setVolSurface(value);
      break;
    case 15:
      var value = new proto.qspace.ContextMsg;
      reader.readMessage(value,proto.qspace.ContextMsg.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 16:
      var value = new proto.qspace.LinksMsg;
      reader.readMessage(value,proto.qspace.LinksMsg.deserializeBinaryFromReader);
      msg.setLinks(value);
      break;
    case 17:
      var value = new proto.qspace.PricingResultsMsg;
      reader.readMessage(value,proto.qspace.PricingResultsMsg.deserializeBinaryFromReader);
      msg.setPricingResults(value);
      break;
    case 18:
      var value = new proto.qspace.PricingOutput;
      reader.readMessage(value,proto.qspace.PricingOutput.deserializeBinaryFromReader);
      msg.setPricingOutput(value);
      break;
    case 19:
      var value = new proto.qspace.GraphMsg;
      reader.readMessage(value,proto.qspace.GraphMsg.deserializeBinaryFromReader);
      msg.setGraph(value);
      break;
    case 20:
      var value = new proto.qspace.StatusMsg;
      reader.readMessage(value,proto.qspace.StatusMsg.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 21:
      var value = new proto.qspace.ScenarioReportMsg;
      reader.readMessage(value,proto.qspace.ScenarioReportMsg.deserializeBinaryFromReader);
      msg.setScenarioReport(value);
      break;
    case 22:
      var value = new proto.qspace.ScenarioResultsMsg;
      reader.readMessage(value,proto.qspace.ScenarioResultsMsg.deserializeBinaryFromReader);
      msg.setScenarioResults(value);
      break;
    case 23:
      var value = new proto.qspace.ScenarioRequest;
      reader.readMessage(value,proto.qspace.ScenarioRequest.deserializeBinaryFromReader);
      msg.setScenarioRequest(value);
      break;
    case 24:
      var value = new proto.qspace.SourcesMsg;
      reader.readMessage(value,proto.qspace.SourcesMsg.deserializeBinaryFromReader);
      msg.setSources(value);
      break;
    case 25:
      var value = new proto.qspace.DoubleMsg;
      reader.readMessage(value,proto.qspace.DoubleMsg.deserializeBinaryFromReader);
      msg.setDoubleMsg(value);
      break;
    case 27:
      var value = new proto.qspace.IntMsg;
      reader.readMessage(value,proto.qspace.IntMsg.deserializeBinaryFromReader);
      msg.setIntMsg(value);
      break;
    case 28:
      var value = new proto.qspace.ExponentMsg;
      reader.readMessage(value,proto.qspace.ExponentMsg.deserializeBinaryFromReader);
      msg.setExponent(value);
      break;
    case 30:
      var value = new proto.qspace.RateMsg;
      reader.readMessage(value,proto.qspace.RateMsg.deserializeBinaryFromReader);
      msg.setRate(value);
      break;
    case 31:
      var value = new proto.qspace.DividendStreamMsg;
      reader.readMessage(value,proto.qspace.DividendStreamMsg.deserializeBinaryFromReader);
      msg.setDividendStream(value);
      break;
    case 32:
      var value = new proto.qspace.SwapMsg;
      reader.readMessage(value,proto.qspace.SwapMsg.deserializeBinaryFromReader);
      msg.setSwap(value);
      break;
    case 33:
      var value = new proto.qspace.IdentityPredicateMsg;
      reader.readMessage(value,proto.qspace.IdentityPredicateMsg.deserializeBinaryFromReader);
      msg.setIdentityPredicate(value);
      break;
    case 34:
      var value = new proto.qspace.PriceShiftMsg;
      reader.readMessage(value,proto.qspace.PriceShiftMsg.deserializeBinaryFromReader);
      msg.setPriceShift(value);
      break;
    case 35:
      var value = new proto.qspace.RateCurveShiftMsg;
      reader.readMessage(value,proto.qspace.RateCurveShiftMsg.deserializeBinaryFromReader);
      msg.setRateCurveShift(value);
      break;
    case 36:
      var value = new proto.qspace.TimeShiftMsg;
      reader.readMessage(value,proto.qspace.TimeShiftMsg.deserializeBinaryFromReader);
      msg.setTimeShift(value);
      break;
    case 37:
      var value = new proto.qspace.VolatilityShiftMsg;
      reader.readMessage(value,proto.qspace.VolatilityShiftMsg.deserializeBinaryFromReader);
      msg.setVolatilityShift(value);
      break;
    case 38:
      var value = new proto.qspace.VertexMsg;
      reader.readMessage(value,proto.qspace.VertexMsg.deserializeBinaryFromReader);
      msg.setVertex(value);
      break;
    case 39:
      var value = new proto.qspace.VersionMsg;
      reader.readMessage(value,proto.qspace.VersionMsg.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    case 40:
      var value = new proto.qspace.UnderlierAttributesMsg;
      reader.readMessage(value,proto.qspace.UnderlierAttributesMsg.deserializeBinaryFromReader);
      msg.setUnderlierAttributes(value);
      break;
    case 41:
      var value = new proto.qspace.PositionMsg;
      reader.readMessage(value,proto.qspace.PositionMsg.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qspace.Wrapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qspace.Wrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qspace.Wrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qspace.Wrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qspace.DataKey.serializeBinaryToWriter
    );
  }
  f = message.getProductDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qspace.ProductDetailsMsg.serializeBinaryToWriter
    );
  }
  f = message.getProductData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qspace.ProductData.serializeBinaryToWriter
    );
  }
  f = message.getDateTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qspace.DateTimeMsg.serializeBinaryToWriter
    );
  }
  f = message.getRateCurve();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.qspace.RateCurveMsg.serializeBinaryToWriter
    );
  }
  f = message.getTimeSeries();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.qspace.TimeSeriesMsg.serializeBinaryToWriter
    );
  }
  f = message.getHolidayCalendar();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.qspace.HolidayCalendarMsg.serializeBinaryToWriter
    );
  }
  f = message.getSwapDefinition();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qspace.SwapDefinitionMsg.serializeBinaryToWriter
    );
  }
  f = message.getFrequency();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.qspace.Frequency.serializeBinaryToWriter
    );
  }
  f = message.getOption();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.qspace.OptionMsg.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.qspace.PriceMsg.serializeBinaryToWriter
    );
  }
  f = message.getVolSurface();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.qspace.VolSurfaceMsg.serializeBinaryToWriter
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.qspace.ContextMsg.serializeBinaryToWriter
    );
  }
  f = message.getLinks();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.qspace.LinksMsg.serializeBinaryToWriter
    );
  }
  f = message.getPricingResults();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.qspace.PricingResultsMsg.serializeBinaryToWriter
    );
  }
  f = message.getPricingOutput();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.qspace.PricingOutput.serializeBinaryToWriter
    );
  }
  f = message.getGraph();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.qspace.GraphMsg.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.qspace.StatusMsg.serializeBinaryToWriter
    );
  }
  f = message.getScenarioReport();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.qspace.ScenarioReportMsg.serializeBinaryToWriter
    );
  }
  f = message.getScenarioResults();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.qspace.ScenarioResultsMsg.serializeBinaryToWriter
    );
  }
  f = message.getScenarioRequest();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.qspace.ScenarioRequest.serializeBinaryToWriter
    );
  }
  f = message.getSources();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.qspace.SourcesMsg.serializeBinaryToWriter
    );
  }
  f = message.getDoubleMsg();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.qspace.DoubleMsg.serializeBinaryToWriter
    );
  }
  f = message.getIntMsg();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.qspace.IntMsg.serializeBinaryToWriter
    );
  }
  f = message.getExponent();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.qspace.ExponentMsg.serializeBinaryToWriter
    );
  }
  f = message.getRate();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.qspace.RateMsg.serializeBinaryToWriter
    );
  }
  f = message.getDividendStream();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.qspace.DividendStreamMsg.serializeBinaryToWriter
    );
  }
  f = message.getSwap();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.qspace.SwapMsg.serializeBinaryToWriter
    );
  }
  f = message.getIdentityPredicate();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.qspace.IdentityPredicateMsg.serializeBinaryToWriter
    );
  }
  f = message.getPriceShift();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.qspace.PriceShiftMsg.serializeBinaryToWriter
    );
  }
  f = message.getRateCurveShift();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.qspace.RateCurveShiftMsg.serializeBinaryToWriter
    );
  }
  f = message.getTimeShift();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.qspace.TimeShiftMsg.serializeBinaryToWriter
    );
  }
  f = message.getVolatilityShift();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.qspace.VolatilityShiftMsg.serializeBinaryToWriter
    );
  }
  f = message.getVertex();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.qspace.VertexMsg.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.qspace.VersionMsg.serializeBinaryToWriter
    );
  }
  f = message.getUnderlierAttributes();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.qspace.UnderlierAttributesMsg.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.qspace.PositionMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataKey key = 1;
 * @return {?proto.qspace.DataKey}
 */
proto.qspace.Wrapper.prototype.getKey = function() {
  return /** @type{?proto.qspace.DataKey} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DataKey, 1));
};


/** @param {?proto.qspace.DataKey|undefined} value */
proto.qspace.Wrapper.prototype.setKey = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qspace.Wrapper.prototype.clearKey = function() {
  this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProductDetailsMsg product_details = 2;
 * @return {?proto.qspace.ProductDetailsMsg}
 */
proto.qspace.Wrapper.prototype.getProductDetails = function() {
  return /** @type{?proto.qspace.ProductDetailsMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ProductDetailsMsg, 2));
};


/** @param {?proto.qspace.ProductDetailsMsg|undefined} value */
proto.qspace.Wrapper.prototype.setProductDetails = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearProductDetails = function() {
  this.setProductDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasProductDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ProductData product_data = 3;
 * @return {?proto.qspace.ProductData}
 */
proto.qspace.Wrapper.prototype.getProductData = function() {
  return /** @type{?proto.qspace.ProductData} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ProductData, 3));
};


/** @param {?proto.qspace.ProductData|undefined} value */
proto.qspace.Wrapper.prototype.setProductData = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearProductData = function() {
  this.setProductData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasProductData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DateTimeMsg date_time = 4;
 * @return {?proto.qspace.DateTimeMsg}
 */
proto.qspace.Wrapper.prototype.getDateTime = function() {
  return /** @type{?proto.qspace.DateTimeMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DateTimeMsg, 4));
};


/** @param {?proto.qspace.DateTimeMsg|undefined} value */
proto.qspace.Wrapper.prototype.setDateTime = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearDateTime = function() {
  this.setDateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasDateTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RateCurveMsg rate_curve = 7;
 * @return {?proto.qspace.RateCurveMsg}
 */
proto.qspace.Wrapper.prototype.getRateCurve = function() {
  return /** @type{?proto.qspace.RateCurveMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.RateCurveMsg, 7));
};


/** @param {?proto.qspace.RateCurveMsg|undefined} value */
proto.qspace.Wrapper.prototype.setRateCurve = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearRateCurve = function() {
  this.setRateCurve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasRateCurve = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TimeSeriesMsg time_series = 8;
 * @return {?proto.qspace.TimeSeriesMsg}
 */
proto.qspace.Wrapper.prototype.getTimeSeries = function() {
  return /** @type{?proto.qspace.TimeSeriesMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.TimeSeriesMsg, 8));
};


/** @param {?proto.qspace.TimeSeriesMsg|undefined} value */
proto.qspace.Wrapper.prototype.setTimeSeries = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearTimeSeries = function() {
  this.setTimeSeries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasTimeSeries = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional HolidayCalendarMsg holiday_calendar = 9;
 * @return {?proto.qspace.HolidayCalendarMsg}
 */
proto.qspace.Wrapper.prototype.getHolidayCalendar = function() {
  return /** @type{?proto.qspace.HolidayCalendarMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.HolidayCalendarMsg, 9));
};


/** @param {?proto.qspace.HolidayCalendarMsg|undefined} value */
proto.qspace.Wrapper.prototype.setHolidayCalendar = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearHolidayCalendar = function() {
  this.setHolidayCalendar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasHolidayCalendar = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SwapDefinitionMsg swap_definition = 10;
 * @return {?proto.qspace.SwapDefinitionMsg}
 */
proto.qspace.Wrapper.prototype.getSwapDefinition = function() {
  return /** @type{?proto.qspace.SwapDefinitionMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapDefinitionMsg, 10));
};


/** @param {?proto.qspace.SwapDefinitionMsg|undefined} value */
proto.qspace.Wrapper.prototype.setSwapDefinition = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearSwapDefinition = function() {
  this.setSwapDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasSwapDefinition = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Frequency frequency = 11;
 * @return {?proto.qspace.Frequency}
 */
proto.qspace.Wrapper.prototype.getFrequency = function() {
  return /** @type{?proto.qspace.Frequency} */ (
    jspb.Message.getWrapperField(this, proto.qspace.Frequency, 11));
};


/** @param {?proto.qspace.Frequency|undefined} value */
proto.qspace.Wrapper.prototype.setFrequency = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearFrequency = function() {
  this.setFrequency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasFrequency = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional OptionMsg option = 12;
 * @return {?proto.qspace.OptionMsg}
 */
proto.qspace.Wrapper.prototype.getOption = function() {
  return /** @type{?proto.qspace.OptionMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.OptionMsg, 12));
};


/** @param {?proto.qspace.OptionMsg|undefined} value */
proto.qspace.Wrapper.prototype.setOption = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearOption = function() {
  this.setOption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasOption = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PriceMsg price = 13;
 * @return {?proto.qspace.PriceMsg}
 */
proto.qspace.Wrapper.prototype.getPrice = function() {
  return /** @type{?proto.qspace.PriceMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.PriceMsg, 13));
};


/** @param {?proto.qspace.PriceMsg|undefined} value */
proto.qspace.Wrapper.prototype.setPrice = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional VolSurfaceMsg vol_surface = 14;
 * @return {?proto.qspace.VolSurfaceMsg}
 */
proto.qspace.Wrapper.prototype.getVolSurface = function() {
  return /** @type{?proto.qspace.VolSurfaceMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.VolSurfaceMsg, 14));
};


/** @param {?proto.qspace.VolSurfaceMsg|undefined} value */
proto.qspace.Wrapper.prototype.setVolSurface = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearVolSurface = function() {
  this.setVolSurface(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasVolSurface = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ContextMsg context = 15;
 * @return {?proto.qspace.ContextMsg}
 */
proto.qspace.Wrapper.prototype.getContext = function() {
  return /** @type{?proto.qspace.ContextMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ContextMsg, 15));
};


/** @param {?proto.qspace.ContextMsg|undefined} value */
proto.qspace.Wrapper.prototype.setContext = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearContext = function() {
  this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasContext = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional LinksMsg links = 16;
 * @return {?proto.qspace.LinksMsg}
 */
proto.qspace.Wrapper.prototype.getLinks = function() {
  return /** @type{?proto.qspace.LinksMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.LinksMsg, 16));
};


/** @param {?proto.qspace.LinksMsg|undefined} value */
proto.qspace.Wrapper.prototype.setLinks = function(value) {
  jspb.Message.setOneofWrapperField(this, 16, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearLinks = function() {
  this.setLinks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasLinks = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional PricingResultsMsg pricing_results = 17;
 * @return {?proto.qspace.PricingResultsMsg}
 */
proto.qspace.Wrapper.prototype.getPricingResults = function() {
  return /** @type{?proto.qspace.PricingResultsMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.PricingResultsMsg, 17));
};


/** @param {?proto.qspace.PricingResultsMsg|undefined} value */
proto.qspace.Wrapper.prototype.setPricingResults = function(value) {
  jspb.Message.setOneofWrapperField(this, 17, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearPricingResults = function() {
  this.setPricingResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasPricingResults = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional PricingOutput pricing_output = 18;
 * @return {?proto.qspace.PricingOutput}
 */
proto.qspace.Wrapper.prototype.getPricingOutput = function() {
  return /** @type{?proto.qspace.PricingOutput} */ (
    jspb.Message.getWrapperField(this, proto.qspace.PricingOutput, 18));
};


/** @param {?proto.qspace.PricingOutput|undefined} value */
proto.qspace.Wrapper.prototype.setPricingOutput = function(value) {
  jspb.Message.setOneofWrapperField(this, 18, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearPricingOutput = function() {
  this.setPricingOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasPricingOutput = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional GraphMsg graph = 19;
 * @return {?proto.qspace.GraphMsg}
 */
proto.qspace.Wrapper.prototype.getGraph = function() {
  return /** @type{?proto.qspace.GraphMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.GraphMsg, 19));
};


/** @param {?proto.qspace.GraphMsg|undefined} value */
proto.qspace.Wrapper.prototype.setGraph = function(value) {
  jspb.Message.setOneofWrapperField(this, 19, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearGraph = function() {
  this.setGraph(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasGraph = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional StatusMsg status = 20;
 * @return {?proto.qspace.StatusMsg}
 */
proto.qspace.Wrapper.prototype.getStatus = function() {
  return /** @type{?proto.qspace.StatusMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.StatusMsg, 20));
};


/** @param {?proto.qspace.StatusMsg|undefined} value */
proto.qspace.Wrapper.prototype.setStatus = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ScenarioReportMsg scenario_report = 21;
 * @return {?proto.qspace.ScenarioReportMsg}
 */
proto.qspace.Wrapper.prototype.getScenarioReport = function() {
  return /** @type{?proto.qspace.ScenarioReportMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ScenarioReportMsg, 21));
};


/** @param {?proto.qspace.ScenarioReportMsg|undefined} value */
proto.qspace.Wrapper.prototype.setScenarioReport = function(value) {
  jspb.Message.setOneofWrapperField(this, 21, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearScenarioReport = function() {
  this.setScenarioReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasScenarioReport = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ScenarioResultsMsg scenario_results = 22;
 * @return {?proto.qspace.ScenarioResultsMsg}
 */
proto.qspace.Wrapper.prototype.getScenarioResults = function() {
  return /** @type{?proto.qspace.ScenarioResultsMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ScenarioResultsMsg, 22));
};


/** @param {?proto.qspace.ScenarioResultsMsg|undefined} value */
proto.qspace.Wrapper.prototype.setScenarioResults = function(value) {
  jspb.Message.setOneofWrapperField(this, 22, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearScenarioResults = function() {
  this.setScenarioResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasScenarioResults = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional ScenarioRequest scenario_request = 23;
 * @return {?proto.qspace.ScenarioRequest}
 */
proto.qspace.Wrapper.prototype.getScenarioRequest = function() {
  return /** @type{?proto.qspace.ScenarioRequest} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ScenarioRequest, 23));
};


/** @param {?proto.qspace.ScenarioRequest|undefined} value */
proto.qspace.Wrapper.prototype.setScenarioRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 23, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearScenarioRequest = function() {
  this.setScenarioRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasScenarioRequest = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional SourcesMsg sources = 24;
 * @return {?proto.qspace.SourcesMsg}
 */
proto.qspace.Wrapper.prototype.getSources = function() {
  return /** @type{?proto.qspace.SourcesMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SourcesMsg, 24));
};


/** @param {?proto.qspace.SourcesMsg|undefined} value */
proto.qspace.Wrapper.prototype.setSources = function(value) {
  jspb.Message.setOneofWrapperField(this, 24, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearSources = function() {
  this.setSources(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasSources = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional DoubleMsg double_msg = 25;
 * @return {?proto.qspace.DoubleMsg}
 */
proto.qspace.Wrapper.prototype.getDoubleMsg = function() {
  return /** @type{?proto.qspace.DoubleMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DoubleMsg, 25));
};


/** @param {?proto.qspace.DoubleMsg|undefined} value */
proto.qspace.Wrapper.prototype.setDoubleMsg = function(value) {
  jspb.Message.setOneofWrapperField(this, 25, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearDoubleMsg = function() {
  this.setDoubleMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasDoubleMsg = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional IntMsg int_msg = 27;
 * @return {?proto.qspace.IntMsg}
 */
proto.qspace.Wrapper.prototype.getIntMsg = function() {
  return /** @type{?proto.qspace.IntMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.IntMsg, 27));
};


/** @param {?proto.qspace.IntMsg|undefined} value */
proto.qspace.Wrapper.prototype.setIntMsg = function(value) {
  jspb.Message.setOneofWrapperField(this, 27, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearIntMsg = function() {
  this.setIntMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasIntMsg = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional ExponentMsg exponent = 28;
 * @return {?proto.qspace.ExponentMsg}
 */
proto.qspace.Wrapper.prototype.getExponent = function() {
  return /** @type{?proto.qspace.ExponentMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.ExponentMsg, 28));
};


/** @param {?proto.qspace.ExponentMsg|undefined} value */
proto.qspace.Wrapper.prototype.setExponent = function(value) {
  jspb.Message.setOneofWrapperField(this, 28, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearExponent = function() {
  this.setExponent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasExponent = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional RateMsg rate = 30;
 * @return {?proto.qspace.RateMsg}
 */
proto.qspace.Wrapper.prototype.getRate = function() {
  return /** @type{?proto.qspace.RateMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.RateMsg, 30));
};


/** @param {?proto.qspace.RateMsg|undefined} value */
proto.qspace.Wrapper.prototype.setRate = function(value) {
  jspb.Message.setOneofWrapperField(this, 30, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearRate = function() {
  this.setRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasRate = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional DividendStreamMsg dividend_stream = 31;
 * @return {?proto.qspace.DividendStreamMsg}
 */
proto.qspace.Wrapper.prototype.getDividendStream = function() {
  return /** @type{?proto.qspace.DividendStreamMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.DividendStreamMsg, 31));
};


/** @param {?proto.qspace.DividendStreamMsg|undefined} value */
proto.qspace.Wrapper.prototype.setDividendStream = function(value) {
  jspb.Message.setOneofWrapperField(this, 31, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearDividendStream = function() {
  this.setDividendStream(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasDividendStream = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional SwapMsg swap = 32;
 * @return {?proto.qspace.SwapMsg}
 */
proto.qspace.Wrapper.prototype.getSwap = function() {
  return /** @type{?proto.qspace.SwapMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.SwapMsg, 32));
};


/** @param {?proto.qspace.SwapMsg|undefined} value */
proto.qspace.Wrapper.prototype.setSwap = function(value) {
  jspb.Message.setOneofWrapperField(this, 32, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearSwap = function() {
  this.setSwap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasSwap = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional IdentityPredicateMsg identity_predicate = 33;
 * @return {?proto.qspace.IdentityPredicateMsg}
 */
proto.qspace.Wrapper.prototype.getIdentityPredicate = function() {
  return /** @type{?proto.qspace.IdentityPredicateMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.IdentityPredicateMsg, 33));
};


/** @param {?proto.qspace.IdentityPredicateMsg|undefined} value */
proto.qspace.Wrapper.prototype.setIdentityPredicate = function(value) {
  jspb.Message.setOneofWrapperField(this, 33, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearIdentityPredicate = function() {
  this.setIdentityPredicate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasIdentityPredicate = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional PriceShiftMsg price_shift = 34;
 * @return {?proto.qspace.PriceShiftMsg}
 */
proto.qspace.Wrapper.prototype.getPriceShift = function() {
  return /** @type{?proto.qspace.PriceShiftMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.PriceShiftMsg, 34));
};


/** @param {?proto.qspace.PriceShiftMsg|undefined} value */
proto.qspace.Wrapper.prototype.setPriceShift = function(value) {
  jspb.Message.setOneofWrapperField(this, 34, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearPriceShift = function() {
  this.setPriceShift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasPriceShift = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional RateCurveShiftMsg rate_curve_shift = 35;
 * @return {?proto.qspace.RateCurveShiftMsg}
 */
proto.qspace.Wrapper.prototype.getRateCurveShift = function() {
  return /** @type{?proto.qspace.RateCurveShiftMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.RateCurveShiftMsg, 35));
};


/** @param {?proto.qspace.RateCurveShiftMsg|undefined} value */
proto.qspace.Wrapper.prototype.setRateCurveShift = function(value) {
  jspb.Message.setOneofWrapperField(this, 35, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearRateCurveShift = function() {
  this.setRateCurveShift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasRateCurveShift = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional TimeShiftMsg time_shift = 36;
 * @return {?proto.qspace.TimeShiftMsg}
 */
proto.qspace.Wrapper.prototype.getTimeShift = function() {
  return /** @type{?proto.qspace.TimeShiftMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.TimeShiftMsg, 36));
};


/** @param {?proto.qspace.TimeShiftMsg|undefined} value */
proto.qspace.Wrapper.prototype.setTimeShift = function(value) {
  jspb.Message.setOneofWrapperField(this, 36, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearTimeShift = function() {
  this.setTimeShift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasTimeShift = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional VolatilityShiftMsg volatility_shift = 37;
 * @return {?proto.qspace.VolatilityShiftMsg}
 */
proto.qspace.Wrapper.prototype.getVolatilityShift = function() {
  return /** @type{?proto.qspace.VolatilityShiftMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.VolatilityShiftMsg, 37));
};


/** @param {?proto.qspace.VolatilityShiftMsg|undefined} value */
proto.qspace.Wrapper.prototype.setVolatilityShift = function(value) {
  jspb.Message.setOneofWrapperField(this, 37, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearVolatilityShift = function() {
  this.setVolatilityShift(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasVolatilityShift = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional VertexMsg vertex = 38;
 * @return {?proto.qspace.VertexMsg}
 */
proto.qspace.Wrapper.prototype.getVertex = function() {
  return /** @type{?proto.qspace.VertexMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.VertexMsg, 38));
};


/** @param {?proto.qspace.VertexMsg|undefined} value */
proto.qspace.Wrapper.prototype.setVertex = function(value) {
  jspb.Message.setOneofWrapperField(this, 38, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearVertex = function() {
  this.setVertex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasVertex = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional VersionMsg version = 39;
 * @return {?proto.qspace.VersionMsg}
 */
proto.qspace.Wrapper.prototype.getVersion = function() {
  return /** @type{?proto.qspace.VersionMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.VersionMsg, 39));
};


/** @param {?proto.qspace.VersionMsg|undefined} value */
proto.qspace.Wrapper.prototype.setVersion = function(value) {
  jspb.Message.setOneofWrapperField(this, 39, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearVersion = function() {
  this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional UnderlierAttributesMsg underlier_attributes = 40;
 * @return {?proto.qspace.UnderlierAttributesMsg}
 */
proto.qspace.Wrapper.prototype.getUnderlierAttributes = function() {
  return /** @type{?proto.qspace.UnderlierAttributesMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.UnderlierAttributesMsg, 40));
};


/** @param {?proto.qspace.UnderlierAttributesMsg|undefined} value */
proto.qspace.Wrapper.prototype.setUnderlierAttributes = function(value) {
  jspb.Message.setOneofWrapperField(this, 40, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearUnderlierAttributes = function() {
  this.setUnderlierAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasUnderlierAttributes = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional PositionMsg position = 41;
 * @return {?proto.qspace.PositionMsg}
 */
proto.qspace.Wrapper.prototype.getPosition = function() {
  return /** @type{?proto.qspace.PositionMsg} */ (
    jspb.Message.getWrapperField(this, proto.qspace.PositionMsg, 41));
};


/** @param {?proto.qspace.PositionMsg|undefined} value */
proto.qspace.Wrapper.prototype.setPosition = function(value) {
  jspb.Message.setOneofWrapperField(this, 41, proto.qspace.Wrapper.oneofGroups_[0], value);
};


proto.qspace.Wrapper.prototype.clearPosition = function() {
  this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qspace.Wrapper.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 41) != null;
};


